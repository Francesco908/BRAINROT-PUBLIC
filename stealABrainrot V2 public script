-- RUBBA BRAINROT GUI FIXED - Sistema Avanzato
-- GUI Movibile, Minimizzabile, Chiudibile con rilevamento perfetto

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Variabili globali
local basePosition = nil
local currentHolding = nil
local isDragging = false
local isMinimized = false
local updateConnection = nil

-- Distruggi GUI esistente se presente
if PlayerGui:FindFirstChild("BrainrotGUI") then
    PlayerGui.BrainrotGUI:Destroy()
end

-- Crea ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BrainrotGUI"
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false

-- Frame principale
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 40)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
MainFrame.Size = UDim2.new(0, 300, 0, 200)
MainFrame.Active = true
MainFrame.ClipsDescendants = true

-- Corner arrotondato
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Bordo
local Border = Instance.new("UIStroke")
Border.Color = Color3.fromRGB(70, 130, 255)
Border.Thickness = 2
Border.Transparency = 0.3
Border.Parent = MainFrame

-- Header (barra del titolo)
local Header = Instance.new("Frame")
Header.Name = "Header"
Header.Parent = MainFrame
Header.BackgroundColor3 = Color3.fromRGB(50, 100, 200)
Header.BorderSizePixel = 0
Header.Size = UDim2.new(1, 0, 0, 35)
Header.Position = UDim2.new(0, 0, 0, 0)

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = Header

-- Fix per header corner (solo top)
local HeaderFix = Instance.new("Frame")
HeaderFix.Parent = Header
HeaderFix.BackgroundColor3 = Color3.fromRGB(50, 100, 200)
HeaderFix.BorderSizePixel = 0
HeaderFix.Position = UDim2.new(0, 0, 0.7, 0)
HeaderFix.Size = UDim2.new(1, 0, 0.3, 0)

-- Titolo
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Parent = Header
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 15, 0, 0)
Title.Size = UDim2.new(1, -80, 1, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "STEAL A BRAINROT"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Pulsante Minimizza
local MinimizeBtn = Instance.new("TextButton")
MinimizeBtn.Name = "MinimizeBtn"
MinimizeBtn.Parent = Header
MinimizeBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
MinimizeBtn.BorderSizePixel = 0
MinimizeBtn.Position = UDim2.new(1, -60, 0.5, -10)
MinimizeBtn.Size = UDim2.new(0, 20, 0, 20)
MinimizeBtn.Font = Enum.Font.GothamBold
MinimizeBtn.Text = "‚àí"
MinimizeBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
MinimizeBtn.TextSize = 16

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 4)
MinCorner.Parent = MinimizeBtn

-- Pulsante Chiudi
local CloseBtn = Instance.new("TextButton")
CloseBtn.Name = "CloseBtn"
CloseBtn.Parent = Header
CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
CloseBtn.BorderSizePixel = 0
CloseBtn.Position = UDim2.new(1, -35, 0.5, -10)
CloseBtn.Size = UDim2.new(0, 20, 0, 20)
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.Text = "√ó"
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.TextSize = 16

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 4)
CloseCorner.Parent = CloseBtn

-- Contenuto
local Content = Instance.new("Frame")
Content.Name = "Content"
Content.Parent = MainFrame
Content.BackgroundTransparency = 1
Content.Position = UDim2.new(0, 0, 0, 40)
Content.Size = UDim2.new(1, 0, 1, -40)

-- Pulsante Teleport Brainrot
local TeleportBtn = Instance.new("TextButton")
TeleportBtn.Name = "TeleportBtn"
TeleportBtn.Parent = Content
TeleportBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
TeleportBtn.BorderSizePixel = 0
TeleportBtn.Position = UDim2.new(0.05, 0, 0.1, 0)
TeleportBtn.Size = UDim2.new(0.9, 0, 0, 35)
TeleportBtn.Font = Enum.Font.GothamBold
TeleportBtn.Text = "üåÄ TELEPORT BRAINROT"
TeleportBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
TeleportBtn.TextSize = 12

local TeleCorner = Instance.new("UICorner")
TeleCorner.CornerRadius = UDim.new(0, 8)
TeleCorner.Parent = TeleportBtn

-- Pulsante Set Base
local SetBaseBtn = Instance.new("TextButton")
SetBaseBtn.Name = "SetBaseBtn"
SetBaseBtn.Parent = Content
SetBaseBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 50)
SetBaseBtn.BorderSizePixel = 0
SetBaseBtn.Position = UDim2.new(0.05, 0, 0.4, 0)
SetBaseBtn.Size = UDim2.new(0.9, 0, 0, 35)
SetBaseBtn.Font = Enum.Font.GothamBold
SetBaseBtn.Text = "üìç SET BASE"
SetBaseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
SetBaseBtn.TextSize = 12

local BaseCorner = Instance.new("UICorner")
BaseCorner.CornerRadius = UDim.new(0, 8)
BaseCorner.Parent = SetBaseBtn

-- Label Holding
local HoldingLabel = Instance.new("TextLabel")
HoldingLabel.Name = "HoldingLabel"
HoldingLabel.Parent = Content
HoldingLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
HoldingLabel.BorderSizePixel = 0
HoldingLabel.Position = UDim2.new(0.05, 0, 0.7, 0)
HoldingLabel.Size = UDim2.new(0.9, 0, 0, 25)
HoldingLabel.Font = Enum.Font.Gotham
HoldingLabel.Text = "ü§≤ Holding: null"
HoldingLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
HoldingLabel.TextSize = 11

local HoldCorner = Instance.new("UICorner")
HoldCorner.CornerRadius = UDim.new(0, 6)
HoldCorner.Parent = HoldingLabel

-- SISTEMA DI RILEVAMENTO AVANZATO
local function getHeldObject()
    local character = Player.Character
    if not character then return nil end
    
    -- Controlla Tool equipaggiato
    local tool = character:FindFirstChildOfClass("Tool")
    if tool then
        return tool, "Tool"
    end
    
    -- Controlla Accessory/Hat
    for _, child in pairs(character:GetChildren()) do
        if child:IsA("Accessory") then
            return child, "Accessory"
        end
    end
    
    -- Controlla Model
    for _, child in pairs(character:GetChildren()) do
        if child:IsA("Model") and child.Name ~= character.Name then
            return child, "Model"
        end
    end
    
    -- Controlla Part
    for _, child in pairs(character:GetChildren()) do
        if child:IsA("BasePart") and child.Name ~= "Head" and child.Name ~= "Torso" and 
           child.Name ~= "Left Arm" and child.Name ~= "Right Arm" and 
           child.Name ~= "Left Leg" and child.Name ~= "Right Leg" and
           child.Name ~= "HumanoidRootPart" then
            return child, "Part"
        end
    end
    
    return nil, nil
end

-- Funzione per teleportare oggetto
local function teleportObject(obj, objType)
    if not obj or not basePosition then return false end
    
    local success = false
    
    if objType == "Tool" then
        if obj:FindFirstChild("Handle") then
            obj.Handle.CFrame = CFrame.new(basePosition)
            success = true
        end
    elseif objType == "Accessory" then
        if obj:FindFirstChild("Handle") then
            obj.Handle.CFrame = CFrame.new(basePosition)
            success = true
        end
    elseif objType == "Model" then
        if obj.PrimaryPart then
            obj:SetPrimaryPartCFrame(CFrame.new(basePosition))
            success = true
        elseif obj:FindFirstChild("Handle") then
            obj.Handle.CFrame = CFrame.new(basePosition)
            success = true
        end
    elseif objType == "Part" then
        obj.CFrame = CFrame.new(basePosition)
        success = true
    end
    
    return success
end

-- Sistema di aggiornamento in tempo reale
local function startHoldingUpdate()
    if updateConnection then
        updateConnection:Disconnect()
    end
    
    updateConnection = RunService.Heartbeat:Connect(function()
        local obj, objType = getHeldObject()
        
        if obj then
            currentHolding = {object = obj, type = objType}
            HoldingLabel.Text = "ü§≤ Holding: " .. obj.Name .. " (" .. objType .. ")"
            HoldingLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        else
            currentHolding = nil
            HoldingLabel.Text = "ü§≤ Holding: Nessun oggetto"
            HoldingLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
        end
    end)
end

-- EVENTI E FUNZIONI

-- Drag System (movibile)
local dragging = false
local dragStart = nil
local startPos = nil

local function updateInput(input)
    if dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end

Header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        local connection
        connection = input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                connection:Disconnect()
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        updateInput(input)
    end
end)

-- Teleport Brainrot
TeleportBtn.MouseButton1Click:Connect(function()
    if not currentHolding then
        -- Effetto errore
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        wait(0.2)
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
        return
    end
    
    if not basePosition then
        -- Effetto warning
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 50)
        wait(0.2)
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
        return
    end
    
    -- Teleporta
    local success = teleportObject(currentHolding.object, currentHolding.type)
    
    if success then
        -- Effetto successo
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
        wait(0.3)
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
    else
        -- Effetto fallimento
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 50)
        wait(0.2)
        TeleportBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 100)
    end
end)

-- Set Base
SetBaseBtn.MouseButton1Click:Connect(function()
    local character = Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        basePosition = character.HumanoidRootPart.Position + Vector3.new(5, 2, 0)
        
        -- Effetto successo
        SetBaseBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
        wait(0.3)
        SetBaseBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 50)
    end
end)

-- Minimizza
MinimizeBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    
    local targetSize = isMinimized and UDim2.new(0, 300, 0, 35) or UDim2.new(0, 300, 0, 200)
    local tween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = targetSize})
    tween:Play()
    
    MinimizeBtn.Text = isMinimized and "+" or "‚àí"
    Content.Visible = not isMinimized
end)

-- Chiudi
CloseBtn.MouseButton1Click:Connect(function()
    if updateConnection then
        updateConnection:Disconnect()
    end
    
    local tween = TweenService:Create(MainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    tween:Play()
    
    tween.Completed:Connect(function()
        ScreenGui:Destroy()
    end)
end)

-- Avvia sistema
startHoldingUpdate()

print("üß† Rubba Brainrot GUI - Sistema Avanzato Caricato!")
