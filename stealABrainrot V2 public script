-- LocalScript placed in StarterGui > ScreenGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local PhysicsService = game:GetService("PhysicsService")

-- CONFIGURATION
local Config = {
    GuiSize = UDim2.new(0, 220, 0, 140),
    FlyHeight = 30,
    ForwardSpeed = 100,
    FlightDuration = 5,
    SpinTime = 2,
    CollisionGroup = "NoClip",
    OpenSoundId = "rbxassetid://601964720"
}

-- Setup custom collision group to ignore collisions
if not pcall(function() PhysicsService:GetCollisionGroupId(Config.CollisionGroup) end) then
    PhysicsService:CreateCollisionGroup(Config.CollisionGroup)
    PhysicsService:CollisionGroupSetCollidable(Config.CollisionGroup, Config.CollisionGroup, false)
end

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- Assign collision group to all parts
for _, part in ipairs(character:GetDescendants()) do
    if part:IsA("BasePart") then
        PhysicsService:SetPartCollisionGroup(part, Config.CollisionGroup)
    end
end

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SigmaHubGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Play opening sound
local sound = Instance.new("Sound")
sound.SoundId = Config.OpenSoundId
sound.Volume = 1
sound.Parent = screenGui
sound:Play()

-- Main Frame
local frame = Instance.new("Frame")
frame.Name = "SigmaHubFrame"
frame.Size = Config.GuiSize
frame.Position = UDim2.new(0.5, -Config.GuiSize.X.Offset/2, 0.5, -Config.GuiSize.Y.Offset/2)
frame.BackgroundTransparency = 0.3
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui

-- Draggable
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        frame.Dragging = true
        frame.StartPos = input.Position
        frame.BasePos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then frame.Dragging = false end
        end)
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if frame.Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - frame.StartPos
        frame.Position = UDim2.new(
            frame.BasePos.X.Scale, frame.BasePos.X.Offset + delta.X,
            frame.BasePos.Y.Scale, frame.BasePos.Y.Offset + delta.Y
        )
    end
end)

-- Button Factory
local function newBtn(text, y)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, y)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.BackgroundTransparency = 0.2
    btn.BorderSizePixel = 0
    btn.Parent = frame
    return btn
end

local flyBtn = newBtn("Float & Forward Fly", 40)
local saveBtn = newBtn("Save Base", 80)

-- Button colors rainbow
RunService.RenderStepped:Connect(function()
    local hue = tick() % 1
    flyBtn.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
    saveBtn.BackgroundColor3 = Color3.fromHSV((hue + 0.5) % 1, 1, 1)
end)

-- Float & Forward Fly Logic
local function floatForwardFly()
    local bp = player:GetAttribute("BasePosition")
    if not bp then warn("Base not set."); return end
    local nums = {}
    for n in bp:gmatch("[-%d%.]+") do table.insert(nums, tonumber(n)) end
    local basePos = Vector3.new(nums[1], nums[2], nums[3])
    local floatPos = basePos + Vector3.new(0, Config.FlyHeight, 0)

    -- Set network ownership and physics blow
    hrp:SetNetworkOwner(player)
    humanoid:ChangeState(Enum.HumanoidStateType.Physics)

    -- teleport instantly to floatPos
    hrp.CFrame = CFrame.new(floatPos)

    -- Apply continuous forward movement
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    bv.Velocity = hrp.CFrame.LookVector * Config.ForwardSpeed
    bv.Parent = hrp

    -- Apply orientation lock
    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
    bg.CFrame = hrp.CFrame
    bg.Parent = hrp

    -- Duration control
    delay(Config.FlightDuration, function()
        bv:Destroy()
        bg:Destroy()
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
    end)
end

flyBtn.MouseButton1Click:Connect(floatForwardFly)
saveBtn.MouseButton1Click:Connect(function()
    player:SetAttribute("BasePosition", tostring(hrp.Position))
    print("Base pos saved:", hrp.Position)
end)

print("Sigma Hub Float v1 loaded.")
