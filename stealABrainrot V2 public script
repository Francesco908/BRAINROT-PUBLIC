-- Script Mobile Roblox - Infinite Jump & Speed Boost Avanzato
-- Compatibile 100% Mobile con GUI draggable

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Variabili principali
local infiniteJumpEnabled = false
local speedBoostEnabled = false
local originalWalkSpeed = 16
local originalJumpPower = 50
local targetSpeed = 100
local speedCoilEquipped = false

-- Connessioni
local jumpConnection
local speedConnection
local heartbeatConnection

-- GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileHackGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame (Draggable)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.05, 0, 0.3, 0)
mainFrame.Size = UDim2.new(0, 320, 0, 400)
mainFrame.Active = true
mainFrame.Draggable = true

-- Corner per rounded edges
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- Gradient per stile
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Header
local header = Instance.new("Frame")
header.Name = "Header"
header.Parent = mainFrame
header.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
header.BackgroundTransparency = 0.2
header.BorderSizePixel = 0
header.Size = UDim2.new(1, 0, 0, 50)

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

-- Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Parent = header
title.BackgroundTransparency = 1
title.Position = UDim2.new(0, 15, 0, 0)
title.Size = UDim2.new(0.7, 0, 1, 0)
title.Font = Enum.Font.GothamBold
title.Text = "Mobile Hack v2.0"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Parent = header
closeButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -45, 0.5, -12.5)
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Font = Enum.Font.GothamBold
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Parent = header
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 150, 50)
minimizeButton.BorderSizePixel = 0
minimizeButton.Position = UDim2.new(1, -75, 0.5, -12.5)
minimizeButton.Size = UDim2.new(0, 25, 0, 25)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 6)
minimizeCorner.Parent = minimizeButton

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Parent = mainFrame
contentFrame.BackgroundTransparency = 1
contentFrame.Position = UDim2.new(0, 0, 0, 60)
contentFrame.Size = UDim2.new(1, 0, 1, -60)

-- Tab System
local tabFrame = Instance.new("Frame")
tabFrame.Name = "TabFrame"
tabFrame.Parent = contentFrame
tabFrame.BackgroundTransparency = 1
tabFrame.Size = UDim2.new(1, 0, 0, 40)

local tab1Button = Instance.new("TextButton")
tab1Button.Name = "MovementTab"
tab1Button.Parent = tabFrame
tab1Button.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
tab1Button.BorderSizePixel = 0
tab1Button.Position = UDim2.new(0, 10, 0, 5)
tab1Button.Size = UDim2.new(0.45, -15, 0, 30)
tab1Button.Font = Enum.Font.Gotham
tab1Button.Text = "Movement"
tab1Button.TextColor3 = Color3.fromRGB(255, 255, 255)
tab1Button.TextScaled = true

local tab1Corner = Instance.new("UICorner")
tab1Corner.CornerRadius = UDim.new(0, 8)
tab1Corner.Parent = tab1Button

local tab2Button = Instance.new("TextButton")
tab2Button.Name = "SettingsTab"
tab2Button.Parent = tabFrame
tab2Button.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
tab2Button.BorderSizePixel = 0
tab2Button.Position = UDim2.new(0.5, 5, 0, 5)
tab2Button.Size = UDim2.new(0.45, -15, 0, 30)
tab2Button.Font = Enum.Font.Gotham
tab2Button.Text = "Settings"
tab2Button.TextColor3 = Color3.fromRGB(200, 200, 200)
tab2Button.TextScaled = true

local tab2Corner = Instance.new("UICorner")
tab2Corner.CornerRadius = UDim.new(0, 8)
tab2Corner.Parent = tab2Button

-- Tab Content Frames
local movementTab = Instance.new("Frame")
movementTab.Name = "MovementTab"
movementTab.Parent = contentFrame
movementTab.BackgroundTransparency = 1
movementTab.Position = UDim2.new(0, 0, 0, 50)
movementTab.Size = UDim2.new(1, 0, 1, -50)
movementTab.Visible = true

local settingsTab = Instance.new("Frame")
settingsTab.Name = "SettingsTab"
settingsTab.Parent = contentFrame
settingsTab.BackgroundTransparency = 1
settingsTab.Position = UDim2.new(0, 0, 0, 50)
settingsTab.Size = UDim2.new(1, 0, 1, -50)
settingsTab.Visible = false

-- Function to create switches
local function createSwitch(parent, text, position, callback)
    local switchFrame = Instance.new("Frame")
    switchFrame.Name = text .. "Switch"
    switchFrame.Parent = parent
    switchFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
    switchFrame.BorderSizePixel = 0
    switchFrame.Position = position
    switchFrame.Size = UDim2.new(1, -20, 0, 60)
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(0, 10)
    switchCorner.Parent = switchFrame
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = switchFrame
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 15, 0, 0)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Font = Enum.Font.GothamMedium
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = switchFrame
    toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    toggleButton.BorderSizePixel = 0
    toggleButton.Position = UDim2.new(1, -60, 0.5, -15)
    toggleButton.Size = UDim2.new(0, 50, 0, 30)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Text = "OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 15)
    toggleCorner.Parent = toggleButton
    
    local isEnabled = false
    
    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        if isEnabled then
            toggleButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
            toggleButton.Text = "ON"
        else
            toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
            toggleButton.Text = "OFF"
        end
        
        -- Animazione
        local tween = TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            Size = UDim2.new(0, 55, 0, 32)
        })
        tween:Play()
        tween.Completed:Connect(function()
            local tween2 = TweenService:Create(toggleButton, TweenInfo.new(0.1), {
                Size = UDim2.new(0, 50, 0, 30)
            })
            tween2:Play()
        end)
        
        callback(isEnabled)
    end)
    
    return switchFrame, toggleButton
end

-- Infinite Jump Switch
local infiniteJumpSwitch, infiniteJumpToggle = createSwitch(
    movementTab, 
    "Infinite Jump", 
    UDim2.new(0, 10, 0, 10),
    function(enabled)
        infiniteJumpEnabled = enabled
        if enabled then
            enableInfiniteJump()
        else
            disableInfiniteJump()
        end
    end
)

-- Speed Boost Switch
local speedBoostSwitch, speedBoostToggle = createSwitch(
    movementTab, 
    "Speed Boost (Auto Coil)", 
    UDim2.new(0, 10, 0, 80),
    function(enabled)
        speedBoostEnabled = enabled
        if enabled then
            enableSpeedBoost()
        else
            disableSpeedBoost()
        end
    end
)

-- Status Display
local statusFrame = Instance.new("Frame")
statusFrame.Name = "StatusFrame"
statusFrame.Parent = movementTab
statusFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
statusFrame.BorderSizePixel = 0
statusFrame.Position = UDim2.new(0, 10, 0, 150)
statusFrame.Size = UDim2.new(1, -20, 0, 80)

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 10)
statusCorner.Parent = statusFrame

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Parent = statusFrame
statusLabel.BackgroundTransparency = 1
statusLabel.Size = UDim2.new(1, 0, 1, 0)
statusLabel.Font = Enum.Font.GothamMedium
statusLabel.Text = "Status: Ready"
statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
statusLabel.TextScaled = true

-- Settings Tab Content
local speedSlider = Instance.new("Frame")
speedSlider.Name = "SpeedSlider"
speedSlider.Parent = settingsTab
speedSlider.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
speedSlider.BorderSizePixel = 0
speedSlider.Position = UDim2.new(0, 10, 0, 10)
speedSlider.Size = UDim2.new(1, -20, 0, 60)

local speedSliderCorner = Instance.new("UICorner")
speedSliderCorner.CornerRadius = UDim.new(0, 10)
speedSliderCorner.Parent = speedSlider

local speedSliderLabel = Instance.new("TextLabel")
speedSliderLabel.Name = "Label"
speedSliderLabel.Parent = speedSlider
speedSliderLabel.BackgroundTransparency = 1
speedSliderLabel.Position = UDim2.new(0, 15, 0, 0)
speedSliderLabel.Size = UDim2.new(1, -30, 0.5, 0)
speedSliderLabel.Font = Enum.Font.GothamMedium
speedSliderLabel.Text = "Speed: 100"
speedSliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedSliderLabel.TextScaled = true
speedSliderLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Funzioni principali
function enableInfiniteJump()
    if jumpConnection then jumpConnection:Disconnect() end
    
    jumpConnection = UserInputService.TouchTapInWorld:Connect(function()
        if infiniteJumpEnabled and humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
    
    -- Anche per input da tastiera se disponibile
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.Space and infiniteJumpEnabled and humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
    
    statusLabel.Text = "Infinite Jump: ACTIVE"
    statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
end

function disableInfiniteJump()
    if jumpConnection then
        jumpConnection:Disconnect()
        jumpConnection = nil
    end
    statusLabel.Text = "Infinite Jump: DISABLED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
end

function enableSpeedBoost()
    if not humanoid then return end
    
    -- Simula Speed Coil equipaggiato
    speedCoilEquipped = true
    originalWalkSpeed = humanoid.WalkSpeed
    
    -- Applica speed boost continuo
    if speedConnection then speedConnection:Disconnect() end
    speedConnection = RunService.Heartbeat:Connect(function()
        if speedBoostEnabled and humanoid and speedCoilEquipped then
            humanoid.WalkSpeed = targetSpeed
            -- Impedisce che la velocità venga cambiata da altri script
            if humanoid.WalkSpeed ~= targetSpeed then
                humanoid.WalkSpeed = targetSpeed
            end
        end
    end)
    
    statusLabel.Text = "Speed Boost: ACTIVE (Speed Coil Simulated)"
    statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
end

function disableSpeedBoost()
    speedCoilEquipped = false
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = nil
    end
    if humanoid then
        humanoid.WalkSpeed = originalWalkSpeed
    end
    statusLabel.Text = "Speed Boost: DISABLED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
end

-- GUI Controls
local isMinimized = false

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local targetSize = isMinimized and UDim2.new(0, 320, 0, 50) or UDim2.new(0, 320, 0, 400)
    
    local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Size = targetSize
    })
    tween:Play()
    
    contentFrame.Visible = not isMinimized
    minimizeButton.Text = isMinimized and "+" or "-"
end)

-- Tab switching
tab1Button.MouseButton1Click:Connect(function()
    movementTab.Visible = true
    settingsTab.Visible = false
    tab1Button.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    tab2Button.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    tab1Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    tab2Button.TextColor3 = Color3.fromRGB(200, 200, 200)
end)

tab2Button.MouseButton1Click:Connect(function()
    movementTab.Visible = false
    settingsTab.Visible = true
    tab1Button.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    tab2Button.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    tab1Button.TextColor3 = Color3.fromRGB(200, 200, 200)
    tab2Button.TextColor3 = Color3.fromRGB(255, 255, 255)
end)

-- Character respawn handling
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = newCharacter:WaitForChild("Humanoid")
    rootPart = newCharacter:WaitForChild("HumanoidRootPart")
    
    -- Riattiva funzioni se erano abilitate
    if infiniteJumpEnabled then
        wait(1)
        enableInfiniteJump()
    end
    if speedBoostEnabled then
        wait(1)
        enableSpeedBoost()
    end
end)

-- Prevent GUI destruction
screenGui.DescendantRemoving:Connect(function(descendant)
    if descendant == screenGui then
        screenGui.Parent = playerGui
    end
end)

print("Mobile Hack Script caricato con successo!")
print("Features: Infinite Jump, Speed Boost Automatico, GUI Mobile Ottimizzata")
print("Versione: 2.0 - Completamente mobile-friendly")
