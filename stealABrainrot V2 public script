-- Sigma Hub Advanced Bypass
-- Made by Znfpro

-- Bypass Anti-Cheat
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}
    
    -- Blocca kick e ban
    if method == "Kick" or method == "kick" then
        return nil
    end
    
    -- Blocca rilevamento velocità
    if tostring(self) == "Humanoid" and (method == "GetPropertyChangedSignal" or method == "Changed") then
        return nil
    end
    
    return old(self, ...)
end)

-- Bypass __index per proprietà
local oldIndex = mt.__index
mt.__index = newcclosure(function(self, key)
    -- Nascondi velocità reale
    if tostring(self) == "Humanoid" then
        if key == "WalkSpeed" then
            return 16
        elseif key == "JumpPower" then
            return 50
        end
    end
    return oldIndex(self, key)
end)

setreadonly(mt, true)

-- Disabilita connessioni anti-cheat
for _, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"))) do
    v:Disable()
end

for _, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpPower"))) do
    v:Disable()
end

-- Script principale
pcall(function()
    
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Variabili
local basePosition = nil
local isMovingToBase = false

-- Attendi personaggio
repeat wait() until player.Character
local character = player.Character
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- GUI sicura
local gui = Instance.new("ScreenGui")
gui.Name = math.random(100000, 999999)
gui.ResetOnSpawn = false

-- Protezione GUI
if syn and syn.protect_gui then
    syn.protect_gui(gui)
    gui.Parent = game:GetService("CoreGui")
else
    gui.Parent = player.PlayerGui
end

-- Logo
local logo = Instance.new("TextLabel")
logo.Size = UDim2.new(0.3, 0, 0.08, 0)
logo.Position = UDim2.new(0.35, 0, 0.3, 0)
logo.BackgroundTransparency = 1
logo.Text = "Made by Znfpro"
logo.TextColor3 = Color3.new(1, 1, 1)
logo.TextScaled = true
logo.Font = Enum.Font.Gotham
logo.Parent = gui

-- Animazione logo
task.spawn(function()
    for i = 1, 0, -0.05 do
        logo.TextTransparency = i
        task.wait(0.03)
    end
    task.wait(2)
    for i = 0, 1, 0.05 do
        logo.TextTransparency = i
        task.wait(0.03)
    end
    logo:Destroy()
end)

-- Pulsante principale
task.wait(3)

local button = Instance.new("TextButton")
button.Name = tostring(math.random())
button.Size = UDim2.new(0.12, 0, 0.06, 0)
button.Position = UDim2.new(0.44, 0, 0.1, 0)
button.BackgroundColor3 = Color3.new(0, 0, 0)
button.Text = "Set Base"
button.TextColor3 = Color3.new(1, 1, 1)
button.TextScaled = true
button.Font = Enum.Font.SourceSans
button.Active = true
button.Draggable = true
button.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.3, 0)
corner.Parent = button

-- Funzioni boost con bypass
local function applySpeedJump()
    -- Metodo 1: Direct property
    pcall(function()
        humanoid.WalkSpeed = 150
        humanoid.JumpPower = 120
    end)
    
    -- Metodo 2: Velocity hack
    game:GetService("RunService").Heartbeat:Connect(function()
        if humanoid.MoveDirection.Magnitude > 0 then
            rootPart.Velocity = humanoid.MoveDirection * 150
        end
    end)
end

-- Click handler
button.MouseButton1Click:Connect(function()
    if button.Text == "Set Base" then
        basePosition = rootPart.CFrame
        button.Text = "Go to Base"
        
        -- Attiva boost
        applySpeedJump()
        
        -- Notifica sicura
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Sigma Hub",
            Text = "Base saved! Boost ON",
            Duration = 3
        })
        
    elseif button.Text == "Go to Base" then
        if not basePosition then return end
        
        isMovingToBase = true
        
        -- God mode
        task.spawn(function()
            while isMovingToBase do
                humanoid.Health = humanoid.MaxHealth
                task.wait()
            end
        end)
        
        -- Suono
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://76714680193450"
        sound.Volume = 0.3
        sound.Parent = workspace
        sound:Play()
        
        -- Movimento con teleport graduale
        task.spawn(function()
            while isMovingToBase do
                local dist = (basePosition.Position - rootPart.Position).Magnitude
                
                if dist < 5 then
                    isMovingToBase = false
                    rootPart.CFrame = basePosition
                    sound:Destroy()
                    break
                end
                
                -- Movimento veloce con micro-teleport
                local dir = (basePosition.Position - rootPart.Position).Unit
                rootPart.CFrame = rootPart.CFrame + (dir * 5)
                
                -- Super jump
                if humanoid.FloorMaterial ~= Enum.Material.Air then
                    rootPart.Velocity = Vector3.new(rootPart.Velocity.X, 200, rootPart.Velocity.Z)
                end
                
                task.wait()
            end
        end)
    end
end)

-- Mantieni boost attivi
task.spawn(function()
    while task.wait(0.1) do
        if humanoid then
            pcall(function()
                humanoid.WalkSpeed = 150
                humanoid.JumpPower = 120
            end)
        end
    end
end)

-- Gestione respawn
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = char:WaitForChild("Humanoid")
    rootPart = char:WaitForChild("HumanoidRootPart")
    
    task.wait(1)
    applySpeedJump()
end)

end) -- fine pcall

print("Sigma Hub Loaded!")
