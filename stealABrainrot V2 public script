-- Advanced GUI Script - Enhanced Version with Tabs
-- Ultra-optimized system with advanced bypass mechanisms

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Advanced Variables
local isTestV1Active = false
local basePosition = nil
local testV1Connection = nil
local godModeConnection = nil
local antiRagdollConnection = nil
local espConnection = nil
local antiTrapConnection = nil
local floatHeight = 50
local currentTab = "main"

-- ESP Variables
local espEnabled = false
local espBoxes = {}

-- Anti-Trap Variables
local trapHeight = 170
local lastPosition = nil
local trapDetectionThreshold = 15
local isInTrap = false

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdvancedStealGUI"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main Frame (Larger for tabs)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 400, 0, 280)
mainFrame.Position = UDim2.new(0.5, -200, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- Frame styling
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 15)
frameCorner.Parent = mainFrame

local frameStroke = Instance.new("UIStroke")
frameStroke.Color = Color3.fromRGB(0, 255, 150)
frameStroke.Thickness = 3
frameStroke.Parent = mainFrame

-- Advanced glow effect
local glowFrame = Instance.new("Frame")
glowFrame.Name = "GlowFrame"
glowFrame.Parent = mainFrame
glowFrame.Size = UDim2.new(1, 12, 1, 12)
glowFrame.Position = UDim2.new(0, -6, 0, -6)
glowFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
glowFrame.BackgroundTransparency = 0.8
glowFrame.ZIndex = -1

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(0, 20)
glowCorner.Parent = glowFrame

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Parent = mainFrame
titleLabel.Size = UDim2.new(1, 0, 0, 35)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "üéÆ ADVANCED ADMIN V2.0"
titleLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

-- Tab System
local tabFrame = Instance.new("Frame")
tabFrame.Name = "TabFrame"
tabFrame.Parent = mainFrame
tabFrame.Size = UDim2.new(1, -10, 0, 30)
tabFrame.Position = UDim2.new(0, 5, 0, 40)
tabFrame.BackgroundTransparency = 1

local tabLayout = Instance.new("UIListLayout")
tabLayout.Parent = tabFrame
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 5)

-- Tab buttons
local tabs = {
    {name = "main", display = "MAIN", color = Color3.fromRGB(0, 120, 255)},
    {name = "esp", display = "ESP", color = Color3.fromRGB(255, 120, 0)},
    {name = "safety", display = "SAFETY", color = Color3.fromRGB(255, 50, 50)},
    {name = "misc", display = "MISC", color = Color3.fromRGB(150, 255, 0)}
}

local tabButtons = {}

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Parent = mainFrame
contentFrame.Size = UDim2.new(1, -20, 1, -85)
contentFrame.Position = UDim2.new(0, 10, 0, 75)
contentFrame.BackgroundTransparency = 1

-- Status Label (Always visible)
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Parent = mainFrame
statusLabel.Size = UDim2.new(1, -20, 0, 15)
statusLabel.Position = UDim2.new(0, 10, 1, -20)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Code
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Create tab content frames
local tabContents = {}

for _, tabInfo in pairs(tabs) do
    local tabContent = Instance.new("Frame")
    tabContent.Name = tabInfo.name .. "Content"
    tabContent.Parent = contentFrame
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = (tabInfo.name == "main")
    tabContents[tabInfo.name] = tabContent
end

-- Function to create tab buttons
local function createTabButton(tabInfo, index)
    local tabBtn = Instance.new("TextButton")
    tabBtn.Name = tabInfo.name .. "Tab"
    tabBtn.Parent = tabFrame
    tabBtn.Size = UDim2.new(0.23, 0, 1, 0)
    tabBtn.BackgroundColor3 = tabInfo.name == "main" and tabInfo.color or Color3.fromRGB(40, 40, 40)
    tabBtn.BackgroundTransparency = 0.2
    tabBtn.Text = tabInfo.display
    tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabBtn.TextScaled = true
    tabBtn.Font = Enum.Font.GothamBold
    tabBtn.BorderSizePixel = 0
    tabBtn.LayoutOrder = index

    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 6)
    tabCorner.Parent = tabBtn

    local tabStroke = Instance.new("UIStroke")
    tabStroke.Color = tabInfo.color
    tabStroke.Thickness = tabInfo.name == "main" and 2 or 1
    tabStroke.Parent = tabBtn

    tabButtons[tabInfo.name] = {button = tabBtn, color = tabInfo.color, stroke = tabStroke}

    tabBtn.MouseButton1Click:Connect(function()
        switchTab(tabInfo.name)
    end)

    return tabBtn
end

-- Create all tab buttons
for i, tabInfo in pairs(tabs) do
    createTabButton(tabInfo, i)
end

-- Function to switch tabs
function switchTab(tabName)
    if currentTab == tabName then return end
    
    currentTab = tabName
    
    -- Hide all content frames
    for name, frame in pairs(tabContents) do
        frame.Visible = false
    end
    
    -- Show selected content frame
    if tabContents[tabName] then
        tabContents[tabName].Visible = true
    end
    
    -- Update tab button styles
    for name, tabData in pairs(tabButtons) do
        if name == tabName then
            tabData.button.BackgroundColor3 = tabData.color
            tabData.stroke.Thickness = 2
        else
            tabData.button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            tabData.stroke.Thickness = 1
        end
    end
end

-- Function to create advanced buttons
local function createAdvancedButton(parent, text, position, size, color, callback)
    local btn = Instance.new("TextButton")
    btn.Parent = parent
    btn.Size = size
    btn.Position = position
    btn.BackgroundColor3 = Color3.fromRGB(color.R * 0.3, color.G * 0.3, color.B * 0.3)
    btn.BackgroundTransparency = 0.2
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextScaled = true
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0

    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = btn

    local btnStroke = Instance.new("UIStroke")
    btnStroke.Color = color
    btnStroke.Thickness = 2
    btnStroke.Parent = btn

    -- Advanced hover effect
    btn.MouseEnter:Connect(function()
        local tween1 = TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(color.R * 0.5, color.G * 0.5, color.B * 0.5)})
        local tween2 = TweenService:Create(btnStroke, TweenInfo.new(0.2), {Thickness = 3})
        tween1:Play()
        tween2:Play()
    end)

    btn.MouseLeave:Connect(function()
        local tween1 = TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(color.R * 0.3, color.G * 0.3, color.B * 0.3)})
        local tween2 = TweenService:Create(btnStroke, TweenInfo.new(0.2), {Thickness = 2})
        tween1:Play()
        tween2:Play()
    end)

    if callback then
        btn.MouseButton1Click:Connect(callback)
    end

    return btn
end

-- MAIN TAB CONTENT
local setBaseBtn = createAdvancedButton(
    tabContents.main,
    "üéØ SET BASE POSITION",
    UDim2.new(0, 0, 0, 0),
    UDim2.new(1, 0, 0, 35),
    Color3.fromRGB(120, 120, 120),
    nil
)

local testV1Btn = createAdvancedButton(
    tabContents.main,
    "üöÄ TEST V1 FLIGHT",
    UDim2.new(0, 0, 0, 45),
    UDim2.new(1, 0, 0, 35),
    Color3.fromRGB(0, 120, 255),
    nil
)

local speedBoostBtn = createAdvancedButton(
    tabContents.main,
    "‚ö° SPEED BOOST",
    UDim2.new(0, 0, 0, 90),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(255, 200, 0),
    nil
)

local jumpBoostBtn = createAdvancedButton(
    tabContents.main,
    "ü¶ò JUMP BOOST",
    UDim2.new(0.52, 0, 0, 90),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(0, 255, 100),
    nil
)

-- ESP TAB CONTENT
local espToggleBtn = createAdvancedButton(
    tabContents.esp,
    "üëÅÔ∏è TOGGLE ESP",
    UDim2.new(0, 0, 0, 0),
    UDim2.new(1, 0, 0, 35),
    Color3.fromRGB(255, 120, 0),
    nil
)

local nameESPBtn = createAdvancedButton(
    tabContents.esp,
    "üìù NAME ESP",
    UDim2.new(0, 0, 0, 45),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(255, 150, 50),
    nil
)

local distanceESPBtn = createAdvancedButton(
    tabContents.esp,
    "üìè DISTANCE ESP",
    UDim2.new(0.52, 0, 0, 45),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(255, 100, 150),
    nil
)

-- SAFETY TAB CONTENT
local antiRagdollBtn = createAdvancedButton(
    tabContents.safety,
    "üõ°Ô∏è ANTI RAGDOLL",
    UDim2.new(0, 0, 0, 0),
    UDim2.new(1, 0, 0, 35),
    Color3.fromRGB(255, 50, 50),
    nil
)

local antiTrapBtn = createAdvancedButton(
    tabContents.safety,
    "üö® ANTI TRAP",
    UDim2.new(0, 0, 0, 45),
    UDim2.new(1, 0, 0, 35),
    Color3.fromRGB(255, 100, 100),
    nil
)

local safeTPBtn = createAdvancedButton(
    tabContents.safety,
    "üè† SAFE TP",
    UDim2.new(0, 0, 0, 90),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(100, 255, 100),
    nil
)

local emergencyBtn = createAdvancedButton(
    tabContents.safety,
    "üÜò EMERGENCY",
    UDim2.new(0.52, 0, 0, 90),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(255, 0, 0),
    nil
)

-- MISC TAB CONTENT
local noclipBtn = createAdvancedButton(
    tabContents.misc,
    "üëª NOCLIP",
    UDim2.new(0, 0, 0, 0),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(150, 255, 0),
    nil
)

local invisBtn = createAdvancedButton(
    tabContents.misc,
    "ü´• INVISIBLE",
    UDim2.new(0.52, 0, 0, 0),
    UDim2.new(0.48, 0, 0, 35),
    Color3.fromRGB(200, 200, 255),
    nil
)

-- Advanced God Mode System
local function enableAdvancedGodMode()
    local character = player.Character
    if not character then return end

    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not rootPart then return end

    -- Ultra God Mode
    humanoid.MaxHealth = math.huge
    humanoid.Health = math.huge

    -- Multiple protection layers
    humanoid.Died:Connect(function()
        wait(0.1)
        humanoid.Health = math.huge
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
    end)

    humanoid.HealthChanged:Connect(function()
        if humanoid.Health < humanoid.MaxHealth then
            humanoid.Health = math.huge
        end
    end)

    -- Enhanced continuous protection
    godModeConnection = RunService.Heartbeat:Connect(function()
        if humanoid and humanoid.Parent then
            if humanoid.Health <= 0 or humanoid.Health < math.huge then
                humanoid.Health = math.huge
                humanoid.MaxHealth = math.huge
            end

            if humanoid:GetState() == Enum.HumanoidStateType.Dead then
                humanoid:ChangeState(Enum.HumanoidStateType.Running)
            end

            humanoid.PlatformStand = false
        end
    end)

    -- Advanced part protection
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
            
            -- Prevent destruction
            local connection
            connection = part.AncestryChanged:Connect(function()
                if not part.Parent and character.Parent then
                    part.Parent = character
                elseif not character.Parent then
                    connection:Disconnect()
                end
            end)
        end
    end
end

-- Advanced Anti-Ragdoll System
local antiRagdollEnabled = false
local function toggleAntiRagdoll()
    antiRagdollEnabled = not antiRagdollEnabled
    
    if antiRagdollEnabled then
        antiRagdollBtn.Text = "üõ°Ô∏è ANTI RAGDOLL [ON]"
        
        antiRagdollConnection = RunService.Heartbeat:Connect(function()
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.PlatformStand = false
                    humanoid.Sit = false
                    
                    -- Force upright state
                    if humanoid:GetState() == Enum.HumanoidStateType.Ragdoll then
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                end
                
                -- Fix all joints
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                        
                        -- Reset rotation
                        if part.Name ~= "HumanoidRootPart" then
                            part.CFrame = part.CFrame * CFrame.Angles(0, 0, 0)
                        end
                    end
                end
            end
        end)
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è ANTI-RAGDOLL"
    else
        antiRagdollBtn.Text = "üõ°Ô∏è ANTI RAGDOLL [OFF]"
        
        if antiRagdollConnection then
            antiRagdollConnection:Disconnect()
            antiRagdollConnection = nil
        end
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
    end
end

-- Advanced ESP System
local function createESPBox(targetPlayer)
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local character = targetPlayer.Character
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")

    -- Create ESP GUI
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "ESP_" .. targetPlayer.Name
    espGui.Parent = rootPart
    espGui.Size = UDim2.new(0, 200, 0, 100)
    espGui.StudsOffset = Vector3.new(0, 3, 0)
    espGui.AlwaysOnTop = true

    -- ESP Frame
    local espFrame = Instance.new("Frame")
    espFrame.Parent = espGui
    espFrame.Size = UDim2.new(1, 0, 1, 0)
    espFrame.BackgroundTransparency = 0.7
    espFrame.BackgroundColor3 = targetPlayer.TeamColor.Color
    espFrame.BorderSizePixel = 2
    espFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)

    local espCorner = Instance.new("UICorner")
    espCorner.CornerRadius = UDim.new(0, 8)
    espCorner.Parent = espFrame

    -- Name Label
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = espFrame
    nameLabel.Size = UDim2.new(1, 0, 0.4, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

    -- Health Label
    local healthLabel = Instance.new("TextLabel")
    healthLabel.Parent = espFrame
    healthLabel.Size = UDim2.new(1, 0, 0.3, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.4, 0)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = "HP: " .. math.floor(humanoid.Health)
    healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    healthLabel.TextScaled = true
    healthLabel.Font = Enum.Font.Code
    healthLabel.TextStrokeTransparency = 0
    healthLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

    -- Distance Label
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = espFrame
    distanceLabel.Size = UDim2.new(1, 0, 0.3, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.7, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.Text = "0m"
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    distanceLabel.TextScaled = true
    distanceLabel.Font = Enum.Font.Code
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

    espBoxes[targetPlayer.Name] = {
        gui = espGui,
        healthLabel = healthLabel,
        distanceLabel = distanceLabel,
        player = targetPlayer
    }
end

local function updateESP()
    if not espEnabled then return end
    
    local myCharacter = player.Character
    if not myCharacter or not myCharacter:FindFirstChild("HumanoidRootPart") then return end
    
    local myPosition = myCharacter.HumanoidRootPart.Position
    
    for playerName, espData in pairs(espBoxes) do
        local targetPlayer = espData.player
        
        if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and targetPlayer.Character:FindFirstChild("Humanoid") then
            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
            local distance = math.floor((myPosition - targetPosition).Magnitude)
            local health = math.floor(targetPlayer.Character.Humanoid.Health)
            
            espData.healthLabel.Text = "HP: " .. health
            espData.distanceLabel.Text = distance .. "m"
            
            -- Color based on distance
            if distance < 50 then
                espData.distanceLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            elseif distance < 100 then
                espData.distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            else
                espData.distanceLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            end
        end
    end
end

local function toggleESP()
    espEnabled = not espEnabled
    
    if espEnabled then
        espToggleBtn.Text = "üëÅÔ∏è ESP [ON]"
        
        -- Create ESP for all players
        for _, targetPlayer in pairs(Players:GetPlayers()) do
            if targetPlayer ~= player then
                createESPBox(targetPlayer)
            end
        end
        
        -- Start ESP update loop
        espConnection = RunService.Heartbeat:Connect(updateESP)
        
        statusLabel.Text = "üü¢ READY | üëÅÔ∏è ESP ACTIVE | üí™ IMMORTAL"
    else
        espToggleBtn.Text = "üëÅÔ∏è ESP [OFF]"
        
        -- Remove all ESP
        for _, espData in pairs(espBoxes) do
            if espData.gui then
                espData.gui:Destroy()
            end
        end
        espBoxes = {}
        
        if espConnection then
            espConnection:Disconnect()
            espConnection = nil
        end
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
    end
end

-- Advanced Anti-Trap System
local antiTrapEnabled = false
local function toggleAntiTrap()
    antiTrapEnabled = not antiTrapEnabled
    
    if antiTrapEnabled then
        antiTrapBtn.Text = "üö® ANTI TRAP [ON]"
        
        antiTrapConnection = RunService.Heartbeat:Connect(function()
            local character = player.Character
            if not character or not character:FindFirstChild("HumanoidRootPart") then return end
            
            local rootPart = character.HumanoidRootPart
            local currentPosition = rootPart.Position
            
            if lastPosition then
                local movement = (currentPosition - lastPosition).Magnitude
                
                -- Check if player is stuck (minimal movement for several frames)
                if movement < 0.5 then
                    -- Check if player is being held by something
                    local humanoid = character:FindFirstChild("Humanoid")
                    if humanoid and (humanoid.PlatformStand or humanoid.Sit) then
                        -- Potential trap detected - escape!
                        local escapePosition = Vector3.new(currentPosition.X, currentPosition.Y + trapHeight, currentPosition.Z)
                        rootPart.CFrame = CFrame.new(escapePosition)
                        rootPart.Velocity = Vector3.new(0, 0, 0)
                        
                        -- Force release from any constraints
                        humanoid.PlatformStand = false
                        humanoid.Sit = false
                        
                        statusLabel.Text = "üö® TRAP DETECTED! ESCAPED TO SAFETY!"
                        
                        wait(1)
                        statusLabel.Text = "üü¢ READY | üö® ANTI-TRAP ACTIVE | üí™ IMMORTAL"
                    end
                end
            end
            
            lastPosition = currentPosition
        end)
        
        statusLabel.Text = "üü¢ READY | üö® ANTI-TRAP ACTIVE | üí™ IMMORTAL"
    else
        antiTrapBtn.Text = "üö® ANTI TRAP [OFF]"
        
        if antiTrapConnection then
            antiTrapConnection:Disconnect()
            antiTrapConnection = nil
        end
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
    end
end

-- Speed and Jump Boost Systems
local speedBoostEnabled = false
local jumpBoostEnabled = false
local originalWalkSpeed = 16
local originalJumpPower = 50

local function toggleSpeedBoost()
    speedBoostEnabled = not speedBoostEnabled
    
    local character = player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid then return end
    
    if speedBoostEnabled then
        speedBoostBtn.Text = "‚ö° SPEED [ON]"
        humanoid.WalkSpeed = 100
    else
        speedBoostBtn.Text = "‚ö° SPEED BOOST"
        humanoid.WalkSpeed = originalWalkSpeed
    end
end

local function toggleJumpBoost()
    jumpBoostEnabled = not jumpBoostEnabled
    
    local character = player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid then return end
    
    if jumpBoostEnabled then
        jumpBoostBtn.Text = "ü¶ò JUMP [ON]"
        humanoid.JumpPower = 150
    else
        jumpBoostBtn.Text = "ü¶ò JUMP BOOST"
        humanoid.JumpPower = originalJumpPower
    end
end

-- Test V1 System (Enhanced)
local testV1LastPos = nil
local testV1ForceCounter = 0

local function ultraStableFloatSystem()
    local character = player.Character
    if not character then return end

    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not rootPart or not basePosition then return end

    local currentPos = rootPart.Position
    local targetPos = basePosition

    -- Enhanced horizontal targeting
    local horizontalTarget = Vector3.new(targetPos.X, currentPos.Y, targetPos.Z)
    local horizontalDistance = (horizontalTarget - currentPos).Magnitude

    -- Advanced anti-cheat detection
    if testV1LastPos and (currentPos - testV1LastPos).Magnitude > 25 then
        testV1ForceCounter = testV1ForceCounter + 1
        statusLabel.Text = "üî¥ ANTI-CHEAT DETECTED [" .. testV1ForceCounter .. "] | FIGHTING BACK!"

        -- Multi-layer counter-attack
        rootPart.CFrame = CFrame.new(testV1LastPos)
        rootPart.Anchored = true
        wait(0.03)
        rootPart.Anchored = false
        
        -- Force velocity reset
        rootPart.Velocity = Vector3.new(0, 0, 0)
        rootPart.RotVelocity = Vector3.new(0, 0, 0)
    end

    if horizontalDistance > 3 then
        -- Ultra-smooth movement calculation
        local direction = (horizontalTarget - currentPos).Unit
        local floatSpeed = math.min(2.5, horizontalDistance * 0.1) -- Dynamic speed
        local newPos = currentPos + (direction * floatSpeed)

        -- Maintain precise height
        newPos = Vector3.new(newPos.X, currentPos.Y, newPos.Z)

        -- Advanced movement with multiple safety layers
        rootPart.CFrame = CFrame.new(newPos)
        rootPart.Velocity = Vector3.new(0, 0, 0)
        rootPart.RotVelocity = Vector3.new(0, 0, 0)

        -- Enhanced physics override
        humanoid.PlatformStand = true
        humanoid.Sit = false

        -- Modern Roblox compatibility
        pcall(function()
            rootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            rootPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
        end)

        -- Advanced fall protection
        if newPos.Y < currentPos.Y - 8 then
            newPos = Vector3.new(newPos.X, currentPos.Y + 2, newPos.Z)
            rootPart.CFrame = CFrame.new(newPos)
        end

        testV1LastPos = newPos
        statusLabel.Text = "üöÄ TEST V1 ACTIVE | DIST: " .. math.floor(horizontalDistance) .. "m | üí™ IMMORTAL"

    else
        -- Enhanced landing sequence
        local landPos = Vector3.new(targetPos.X, targetPos.Y + 2, targetPos.Z)
        rootPart.CFrame = CFrame.new(landPos)

        wait(0.3)
        humanoid.PlatformStand = false
        rootPart.Anchored = false

        -- Mission complete
        isTestV1Active = false
        statusLabel.Text = "‚úÖ TEST V1 COMPLETE | MISSION SUCCESS | üí™ IMMORTAL"
        testV1Btn.Text = "üöÄ TEST V1 FLIGHT"
        testV1Btn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)

        if testV1Connection then
            testV1Connection:Disconnect()
            testV1Connection = nil
        end

        testV1LastPos = nil
        testV1ForceCounter = 0
    end
end

-- Set Base Position Function (Enhanced)
local function setBasePosition()
    local character = player.Character
    if not character then
        statusLabel.Text = "‚ùå NO CHARACTER FOUND"
        return
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then
        statusLabel.Text = "‚ùå NO ROOT PART FOUND"
        return
    end

    basePosition = rootPart.Position
    statusLabel.Text = "‚úÖ BASE POSITION SET | üí™ IMMORTAL"

    -- Enhanced visual feedback
    local tween = TweenService:Create(setBaseBtn, TweenInfo.new(0.5), {
        BackgroundColor3 = Color3.fromRGB(0, 255, 0),
        BackgroundTransparency = 0.1
    })
    tween:Play()

    wait(1.5)

    local tween2 = TweenService:Create(setBaseBtn, TweenInfo.new(0.5), {
        BackgroundColor3 = Color3.fromRGB(120, 120, 120),
        BackgroundTransparency = 0.2
    })
    tween2:Play()
end

-- Test V1 Function (Enhanced)
local function startTestV1()
    if not basePosition then
        statusLabel.Text = "‚ö†Ô∏è SET BASE POSITION FIRST!"
        return
    end

    if isTestV1Active then
        -- Stop Test V1
        isTestV1Active = false
        statusLabel.Text = "üõë TEST V1 STOPPED | üí™ IMMORTAL"
        testV1Btn.Text = "üöÄ TEST V1 FLIGHT"

        if testV1Connection then
            testV1Connection:Disconnect()
            testV1Connection = nil
        end

        -- Advanced reset sequence
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")

            if humanoid then
                humanoid.PlatformStand = false
                humanoid.Sit = false
                humanoid.WalkSpeed = speedBoostEnabled and 100 or 16
            end

            if rootPart then
                rootPart.Anchored = false
                rootPart.CanCollide = true
            end
        end

        testV1LastPos = nil
        testV1ForceCounter = 0
        return
    end

    -- Start Test V1
    isTestV1Active = true
    statusLabel.Text = "üöÄ INITIALIZING TEST V1 FLIGHT..."
    testV1Btn.Text = "üõë STOP TEST"

    -- Set initial float height
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local currentPos = rootPart.Position
            local floatPos = Vector3.new(currentPos.X, currentPos.Y + floatHeight, currentPos.Z)
            rootPart.CFrame = CFrame.new(floatPos)
            
            -- Stabilization pause
            wait(0.5)
        end
    end

    -- Start ultra-stable flight system
    testV1LastPos = nil
    testV1ForceCounter = 0
    testV1Connection = RunService.Heartbeat:Connect(ultraStableFloatSystem)
end

-- Noclip System
local noclipEnabled = false
local noclipConnection = nil

local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    
    if noclipEnabled then
        noclipBtn.Text = "üëª NOCLIP [ON]"
        
        noclipConnection = RunService.Stepped:Connect(function()
            local character = player.Character
            if character then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
        
        statusLabel.Text = "üü¢ READY | üëª NOCLIP ACTIVE | üí™ IMMORTAL"
    else
        noclipBtn.Text = "üëª NOCLIP"
        
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        
        local character = player.Character
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
    end
end

-- Invisibility System
local invisEnabled = false

local function toggleInvisibility()
    invisEnabled = not invisEnabled
    
    local character = player.Character
    if not character then return end
    
    if invisEnabled then
        invisBtn.Text = "ü´• INVISIBLE [ON]"
        
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Transparency = 1
            elseif part:IsA("Accessory") then
                local handle = part:FindFirstChild("Handle")
                if handle then
                    handle.Transparency = 1
                end
            end
        end
        
        local head = character:FindFirstChild("Head")
        if head and head:FindFirstChild("face") then
            head.face.Transparency = 1
        end
        
        statusLabel.Text = "üü¢ READY | ü´• INVISIBLE | üí™ IMMORTAL"
    else
        invisBtn.Text = "ü´• INVISIBLE"
        
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
            elseif part:IsA("Accessory") then
                local handle = part:FindFirstChild("Handle")
                if handle then
                    handle.Transparency = 0
                end
            end
        end
        
        local head = character:FindFirstChild("Head")
        if head and head:FindFirstChild("face") then
            head.face.Transparency = 0
        end
        
        statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
    end
end

-- Emergency Functions
local function emergencyEscape()
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local rootPart = character.HumanoidRootPart
    local currentPos = rootPart.Position
    
    -- Emergency teleport to high altitude
    local emergencyPos = Vector3.new(currentPos.X, currentPos.Y + 200, currentPos.Z)
    rootPart.CFrame = CFrame.new(emergencyPos)
    
    -- Reset all states
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.PlatformStand = false
        humanoid.Sit = false
        humanoid.Health = math.huge
    end
    
    statusLabel.Text = "üÜò EMERGENCY ESCAPE ACTIVATED!"
    
    wait(2)
    statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
end

local function safeTP()
    if basePosition then
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = CFrame.new(basePosition)
            statusLabel.Text = "üè† TELEPORTED TO SAFE BASE!"
            
            wait(1)
            statusLabel.Text = "üü¢ READY | üí™ IMMORTAL | üõ°Ô∏è PROTECTED"
        end
    else
        statusLabel.Text = "‚ö†Ô∏è NO BASE POSITION SET!"
    end
end

-- Connect all button functions
setBaseBtn.MouseButton1Click:Connect(setBasePosition)
testV1Btn.MouseButton1Click:Connect(startTestV1)
speedBoostBtn.MouseButton1Click:Connect(toggleSpeedBoost)
jumpBoostBtn.MouseButton1Click:Connect(toggleJumpBoost)
espToggleBtn.MouseButton1Click:Connect(toggleESP)
antiRagdollBtn.MouseButton1Click:Connect(toggleAntiRagdoll)
antiTrapBtn.MouseButton1Click:Connect(toggleAntiTrap)
noclipBtn.MouseButton1Click:Connect(toggleNoclip)
invisBtn.MouseButton1Click:Connect(toggleInvisibility)
emergencyBtn.MouseButton1Click:Connect(emergencyEscape)
safeTPBtn.MouseButton1Click:Connect(safeTP)

-- Player management for ESP
Players.PlayerAdded:Connect(function(newPlayer)
    if espEnabled and newPlayer ~= player then
        wait(1) -- Wait for character to load
        createESPBox(newPlayer)
    end
end)

Players.PlayerRemoving:Connect(function(leavingPlayer)
    if espBoxes[leavingPlayer.Name] then
        if espBoxes[leavingPlayer.Name].gui then
            espBoxes[leavingPlayer.Name].gui:Destroy()
        end
        espBoxes[leavingPlayer.Name] = nil
    end
end)

-- Initialize Advanced God Mode with enhanced respawn protection
player.CharacterAdded:Connect(function(character)
    wait(1)
    enableAdvancedGodMode()

    -- Store original values
    local humanoid = character:WaitForChild("Humanoid")
    originalWalkSpeed = humanoid.WalkSpeed
    originalJumpPower = humanoid.JumpPower

    -- Apply current boosts if enabled
    if speedBoostEnabled then
        humanoid.WalkSpeed = 100
    end
    if jumpBoostEnabled then
        humanoid.JumpPower = 150
    end

    -- Enhanced respawn protection with multi-threading
    spawn(function()
        while character.Parent do
            wait(0.3)
            if character:FindFirstChild("Humanoid") then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid.Health <= 0 then
                    humanoid.Health = math.huge
                    humanoid.MaxHealth = math.huge
                    humanoid:ChangeState(Enum.HumanoidStateType.Running)
                end
            end
        end
    end)

    -- Re-enable active systems after respawn
    if antiRagdollEnabled then
        spawn(function()
            wait(2)
            toggleAntiRagdoll()
            toggleAntiRagdoll()
        end)
    end

    if antiTrapEnabled then
        spawn(function()
            wait(2)
            toggleAntiTrap()
            toggleAntiTrap()
        end)
    end
end)

-- Initialize if character already exists
if player.Character then
    enableAdvancedGodMode()
end

-- Enhanced cleanup system
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        -- Disconnect all connections
        local connections = {
            testV1Connection,
            godModeConnection,
            antiRagdollConnection,
            espConnection,
            antiTrapConnection,
            noclipConnection
        }
        
        for _, connection in pairs(connections) do
            if connection then
                connection:Disconnect()
            end
        end
        
        -- Clean up ESP
        for _, espData in pairs(espBoxes) do
            if espData.gui then
                espData.gui:Destroy()
            end
        end
    end
end)

-- Advanced glow animation with color cycling
spawn(function()
    local colorIndex = 1
    local colors = {
        Color3.fromRGB(0, 255, 150),
        Color3.fromRGB(0, 150, 255),
        Color3.fromRGB(255, 0, 150),
        Color3.fromRGB(255, 150, 0),
        Color3.fromRGB(150, 255, 0)
    }
    
    while wait(0.1) do
        if glowFrame and glowFrame.Parent then
            local currentColor = colors[colorIndex]
            
            local glowTween = TweenService:Create(glowFrame,
                TweenInfo.new(4, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
                {BackgroundTransparency = 0.9, BackgroundColor3 = currentColor}
            )
            glowTween:Play()
            
            local strokeTween = TweenService:Create(frameStroke,
                TweenInfo.new(4, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
                {Color = currentColor}
            )
            strokeTween:Play()
            
            colorIndex = colorIndex + 1
            if colorIndex > #colors then
                colorIndex = 1
            end
            
            wait(4)
        else
            break
        end
    end
end)

-- Advanced console logging
print("üöÄ ADVANCED ADMIN GUI V2.0 LOADED SUCCESSFULLY!")
print("‚úÖ All systems initialized and ready")
print("üõ°Ô∏è Ultra God Mode: ACTIVE")
print("üéØ Advanced Anti-Cheat Bypass: LOADED")
print("üëÅÔ∏è ESP System: READY")
print("üö® Anti-Trap System: STANDBY")
print("üîß All features unlocked and optimized!")

-- Performance monitoring
spawn(function()
    while wait(5) do
        local memUsage = collectgarbage("count")
        if memUsage > 50000 then -- 50MB threshold
            collectgarbage("collect")
            print("üßπ Memory cleaned: " .. math.floor(memUsage/1024) .. "MB freed")
        end
    end
end)
