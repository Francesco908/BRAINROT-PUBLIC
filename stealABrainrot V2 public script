-- LocalScript da inserire in StarterPlayerScripts
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Configurazione
local FLY_CONFIG = {
    SPEED = 50,
    ACCELERATION = 10,
    MAX_HEIGHT = 200,
    TOGGLE_KEY = Enum.KeyCode.F,
    ANIMATION_ID = "rbxassetid://27789359", -- Animazione di volo
    EFFECTS_ENABLED = true
}

-- Stato del volo
local isFlying = false
local flyVelocity = Vector3.new(0, 0, 0)
local bodyVelocity = nil
local animationTrack = nil
local connection = nil

-- Funzione per creare effetti visivi
local function createEffects()
    if not FLY_CONFIG.EFFECTS_ENABLED then return end
    
    local character = player.Character
    if not character then return end
    
    -- Creiamo un effetto scintillante semplice
    local attachment = Instance.new("Attachment", character.PrimaryPart)
    attachment.Position = Vector3.new(0, -2, 0)
    
    local particles = Instance.new("ParticleEmitter")
    particles.Texture = "rbxasset://textures/particles/sparkles_main.dds"
    particles.Color = ColorSequence.new(Color3.new(0.5, 0.8, 1))
    particles.Size = NumberSequence.new(0.3)
    particles.Lifetime = NumberRange.new(1)
    particles.Rate = 20
    particles.Speed = NumberRange.new(0, 1)
    particles.Parent = attachment
    
    return attachment
end

-- Funzione per caricare l'animazione
local function loadAnimation()
    local character = player.Character
    if not character then return nil end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return nil end
    
    local animator = humanoid:FindFirstChildOfClass("Animator")
    if not animator then return nil end
    
    local animation = Instance.new("Animation")
    animation.AnimationId = FLY_CONFIG.ANIMATION_ID
    
    return animator:LoadAnimation(animation)
end

-- Funzione per iniziare il volo
local function startFly()
    if isFlying then return end
    
    local character = player.Character
    if not character or not character.PrimaryPart then return end
    
    isFlying = true
    
    -- Crea e configura il BodyVelocity
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.P = 1000
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = character.PrimaryPart
    
    -- Carica e riproduci l'animazione
    animationTrack = loadAnimation()
    if animationTrack then
        animationTrack:Play()
        animationTrack.Priority = Enum.AnimationPriority.Action
    end
    
    -- Crea effetti
    local effects = createEffects()
    
    -- Notifica visiva
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 200, 0, 50)
    notification.Position = UDim2.new(0.5, -100, 0.3, 0)
    notification.BackgroundColor3 = Color3.fromRGB(50, 150, 255)
    notification.Text = "MODO VOLO ATTIVATO"
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.Font = Enum.Font.GothamBold
    notification.TextSize = 18
    notification.Parent = player.PlayerGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = notification
    
    TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 0.3}):Play()
    game:GetService("Debris"):AddItem(notification, 2)
    
    -- Aggiorna la gravità per un volo più stabile
    character.PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    
    -- Loop di aggiornamento del volo
    connection = RunService.Heartbeat:Connect(function(deltaTime)
        if not isFlying or not character or not character.PrimaryPart then
            stopFly()
            return
        end
        
        -- Calcola la direzione del movimento
        local moveDirection = Vector3.new(0, 0, 0)
        local camera = workspace.CurrentCamera
        
        -- Movimento orizzontale
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + camera.CFrame.RightVector
        end
        
        -- Movimento verticale
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveDirection = moveDirection + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveDirection = moveDirection - Vector3.new(0, 1, 0)
        end
        
        -- Normalizza e applica la velocità
        if moveDirection.Magnitude > 0 then
            moveDirection = moveDirection.Unit * FLY_CONFIG.SPEED
            flyVelocity = flyVelocity:Lerp(moveDirection, deltaTime * FLY_CONFIG.ACCELERATION)
        else
            flyVelocity = flyVelocity:Lerp(Vector3.new(0, 0, 0), deltaTime * 5)
        end
        
        -- Applica la velocità
        bodyVelocity.Velocity = flyVelocity
        
        -- Limita l'altezza massima
        if character.PrimaryPart.Position.Y > FLY_CONFIG.MAX_HEIGHT then
            local pos = character.PrimaryPart.Position
            character.PrimaryPart.Position = Vector3.new(pos.X, FLY_CONFIG.MAX_HEIGHT, pos.Z)
            flyVelocity = Vector3.new(flyVelocity.X, 0, flyVelocity.Z)
        end
        
        -- Orienta il personaggio nella direzione del movimento
        if flyVelocity.Magnitude > 0.1 then
            character.PrimaryPart.CFrame = CFrame.new(
                character.PrimaryPart.Position,
                character.PrimaryPart.Position + flyVelocity.Unit
            )
        end
    end)
end

-- Funzione per fermare il volo
local function stopFly()
    if not isFlying then return end
    
    isFlying = false
    
    -- Rimuovi il BodyVelocity
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    
    -- Ferma l'animazione
    if animationTrack then
        animationTrack:Stop()
        animationTrack = nil
    end
    
    -- Rimuovi gli effetti
    local character = player.Character
    if character and character.PrimaryPart then
        for _, obj in pairs(character.PrimaryPart:GetChildren()) do
            if obj:IsA("Attachment") and obj:FindFirstChild("ParticleEmitter") then
                obj:Destroy()
            end
        end
        
        -- Ripristina le proprietà fisiche
        character.PrimaryPart.CustomPhysicalProperties = nil
    end
    
    -- Disconnetti il loop
    if connection then
        connection:Disconnect()
        connection = nil
    end
    
    -- Notifica visiva
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 200, 0, 50)
    notification.Position = UDim2.new(0.5, -100, 0.3, 0)
    notification.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    notification.Text = "MODO VOLO DISATTIVATO"
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.Font = Enum.Font.GothamBold
    notification.TextSize = 18
    notification.Parent = player.PlayerGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = notification
    
    TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 0.3}):Play()
    game:GetService("Debris"):AddItem(notification, 2)
end

-- Funzione per gestire l'input
local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == FLY_CONFIG.TOGGLE_KEY then
        if isFlying then
            stopFly()
        else
            startFly()
        end
    end
end

-- Collega la funzione di input
UserInputService.InputBegan:Connect(onInputBegan)

-- Notifica iniziale
player.CharacterAdded:Connect(function()
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 300, 0, 60)
    notification.Position = UDim2.new(0.5, -150, 0.4, 0)
    notification.BackgroundColor3 = Color3.fromRGB(30, 30, 50)
    notification.Text = "SISTEMA DI VOLO PRONTO\nPremi F per attivare"
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.Font = Enum.Font.GothamBold
    notification.TextSize = 18
    notification.TextScaled = true
    notification.Parent = player.PlayerGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = notification
    
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 2
    stroke.Color = Color3.fromRGB(100, 150, 255)
    stroke.Transparency = 0.3
    stroke.Parent = notification
    
    TweenService:Create(notification, TweenInfo.new(0.5), {BackgroundTransparency = 0.3}):Play()
    game:GetService("Debris"):AddItem(notification, 4)
end)
