-- 🔥 ADVANCED HACKER TP SYSTEM V2.0 🔥
-- Ultra-optimized with hacker aesthetic

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- Wait for character
local function getCharacter()
    return player.Character or player.CharacterAdded:Wait()
end

local function getHumanoid()
    local char = getCharacter()
    return char:WaitForChild("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char:WaitForChild("HumanoidRootPart")
end

-- Global system variables
local HackerTP = {
    basePosition = nil,
    isJumping = false,
    isFloating = false,
    connections = {},
    gui = nil,
    menuOpen = false,
    jumpPower = 75,
    floatHeight = 20,
    safetyMode = true,
    hackMode = true
}

-- Hacker colors
local COLORS = {
    bg = Color3.fromRGB(10, 10, 15),
    accent = Color3.fromRGB(0, 255, 65),
    danger = Color3.fromRGB(255, 50, 50),
    warning = Color3.fromRGB(255, 200, 0),
    info = Color3.fromRGB(50, 150, 255),
    text = Color3.fromRGB(200, 255, 200),
    border = Color3.fromRGB(0, 150, 40)
}

-- Notification system
local function notify(title, text, color)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "🔰 " .. title,
            Text = text,
            Duration = 3,
        })
    end)
end

-- Advanced GUI Creation
local function createHackerGUI()
    -- Remove existing GUI
    if HackerTP.gui then
        HackerTP.gui:Destroy()
    end
    
    -- Create main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "HackerTPSystem"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    
    -- Ensure GUI is created properly
    pcall(function()
        screenGui.Parent = player:WaitForChild("PlayerGui")
    end)
    
    -- Main container (hidden initially, smaller size)
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainContainer"
    mainFrame.Size = UDim2.new(0, 280, 0, 320)
    mainFrame.Position = UDim2.new(0.5, -140, 0.5, -160) -- Center position
    mainFrame.BackgroundColor3 = COLORS.bg
    mainFrame.BorderSizePixel = 0
    mainFrame.Visible = false -- Start hidden
    mainFrame.Parent = screenGui
    
    -- Rounded corners
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 15)
    mainCorner.Parent = mainFrame
    
    -- Matrix-style glowing border
    local borderFrame = Instance.new("Frame")
    borderFrame.Name = "GlowBorder"
    borderFrame.Size = UDim2.new(1, 6, 1, 6)
    borderFrame.Position = UDim2.new(0, -3, 0, -3)
    borderFrame.BackgroundColor3 = COLORS.accent
    borderFrame.BackgroundTransparency = 0.3
    borderFrame.ZIndex = mainFrame.ZIndex - 1
    borderFrame.Parent = mainFrame
    
    local borderCorner = Instance.new("UICorner")
    borderCorner.CornerRadius = UDim.new(0, 18)
    borderCorner.Parent = borderFrame
    
    -- Animated glow effect
    spawn(function()
        while borderFrame.Parent do
            local tween1 = TweenService:Create(borderFrame, TweenInfo.new(1.5, Enum.EasingStyle.Sine), {
                BackgroundTransparency = 0.1
            })
            tween1:Play()
            tween1.Completed:Wait()
            
            if borderFrame.Parent then
                local tween2 = TweenService:Create(borderFrame, TweenInfo.new(1.5, Enum.EasingStyle.Sine), {
                    BackgroundTransparency = 0.6
                })
                tween2:Play()
                tween2.Completed:Wait()
            end
        end
    end)
    
    -- Hacker-style header with rounded top
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 50)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    -- Rounded top corners for header
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 15)
    headerCorner.Parent = header
    
    -- Matrix rain effect background
    local matrixBg = Instance.new("Frame")
    matrixBg.Name = "MatrixBackground"
    matrixBg.Size = UDim2.new(1, 0, 1, 0)
    matrixBg.Position = UDim2.new(0, 0, 0, 0)
    matrixBg.BackgroundTransparency = 0.8
    matrixBg.BackgroundColor3 = COLORS.accent
    matrixBg.Parent = header
    
    local matrixCorner = Instance.new("UICorner")
    matrixCorner.CornerRadius = UDim.new(0, 15)
    matrixCorner.Parent = matrixBg
    
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -20, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = ">>> HACKER.TP.SYS <<<"
    titleText.TextColor3 = COLORS.accent
    titleText.TextScaled = true
    titleText.Font = Enum.Font.Code
    titleText.Parent = header
    
    -- Animated cursor effect
    spawn(function()
        while titleText.Parent do
            titleText.Text = ">>> HACKER.TP.SYS <<<"
            wait(0.8)
            if titleText.Parent then
                titleText.Text = ">>> HACKER.TP.SYS <<<_"
                wait(0.8)
            end
        end
    end)
    
    -- Scrolling content area (smaller)
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "Content"
    scrollFrame.Size = UDim2.new(1, -16, 1, -65)
    scrollFrame.Position = UDim2.new(0, 8, 0, 55)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.ScrollBarImageColor3 = COLORS.accent
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 350)
    scrollFrame.Parent = mainFrame
    
    -- Button layout
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 8)
    listLayout.Parent = scrollFrame
    
    -- Hacker button creation function (smaller buttons)
    local function createHackerButton(text, color, callback, order)
        local button = Instance.new("TextButton")
        button.Name = text:gsub(" ", ""):gsub("[^%w]", "")
        button.Size = UDim2.new(1, 0, 0, 35) -- Smaller height
        button.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
        button.BorderSizePixel = 0
        button.Text = "> " .. text:upper() .. " <"
        button.TextColor3 = color
        button.TextScaled = true
        button.Font = Enum.Font.Code
        button.LayoutOrder = order
        button.Parent = scrollFrame
        
        -- Rounded button corners
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = button
        
        -- Matrix-style border
        local buttonBorder = Instance.new("UIStroke")
        buttonBorder.Color = color
        buttonBorder.Thickness = 1
        buttonBorder.Transparency = 0.5
        buttonBorder.Parent = button
        
        -- Hover effects with matrix glow
        local isHovering = false
        button.MouseEnter:Connect(function()
            isHovering = true
            local hoverTween = TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.new(color.R * 0.3, color.G * 0.3, color.B * 0.3)
            })
            hoverTween:Play()
            
            local borderTween = TweenService:Create(buttonBorder, TweenInfo.new(0.2), {
                Thickness = 2,
                Transparency = 0
            })
            borderTween:Play()
            
            button.Text = ">> " .. text:upper() .. " <<"
        end)
        
        button.MouseLeave:Connect(function()
            isHovering = false
            local leaveTween = TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(15, 15, 20)
            })
            leaveTween:Play()
            
            local borderTween = TweenService:Create(buttonBorder, TweenInfo.new(0.2), {
                Thickness = 1,
                Transparency = 0.5
            })
            borderTween:Play()
            
            button.Text = "> " .. text:upper() .. " <"
        end)
        
        -- Click effect with matrix flash
        button.MouseButton1Click:Connect(function()
            -- Flash effect
            local flashFrame = Instance.new("Frame")
            flashFrame.Size = UDim2.new(1, 0, 1, 0)
            flashFrame.Position = UDim2.new(0, 0, 0, 0)
            flashFrame.BackgroundColor3 = color
            flashFrame.BackgroundTransparency = 0.5
            flashFrame.Parent = button
            
            local flashCorner = Instance.new("UICorner")
            flashCorner.CornerRadius = UDim.new(0, 8)
            flashCorner.Parent = flashFrame
            
            local flashTween = TweenService:Create(flashFrame, TweenInfo.new(0.3), {
                BackgroundTransparency = 1
            })
            flashTween:Play()
            
            spawn(function()
                wait(0.3)
                flashFrame:Destroy()
            end)
            
            callback()
        end)
        
        return button
    end
    
    -- Create all buttons
    createHackerButton("Set Base Location", COLORS.accent, function()
        local rootPart = getRootPart()
        HackerTP.basePosition = rootPart.Position
        notify("BASE.SET", "Location locked: " .. tostring(HackerTP.basePosition), COLORS.accent)
    end, 1)
    
    createHackerButton("Instant Teleport", COLORS.danger, function()
        if HackerTP.basePosition then
            instantTeleport()
        else
            notify("ERROR", "Base location not set!", COLORS.danger)
        end
    end, 2)
    
    createHackerButton("Smart Jump System", COLORS.info, function()
        if HackerTP.basePosition then
            if HackerTP.isJumping then
                stopSmartJump()
            else
                startSmartJump()
            end
        else
            notify("ERROR", "Base location not set!", COLORS.danger)
        end
    end, 3)
    
    createHackerButton("Float Mode Toggle", COLORS.warning, function()
        toggleFloat()
    end, 4)
    
    createHackerButton("Jump Power: " .. HackerTP.jumpPower, COLORS.accent, function()
        HackerTP.jumpPower = HackerTP.jumpPower >= 100 and 50 or HackerTP.jumpPower + 25
        notify("POWER.SET", "Jump power: " .. HackerTP.jumpPower, COLORS.info)
        -- Update button text
        scrollFrame:FindFirstChild("JumpPower" .. HackerTP.jumpPower).Text = "> JUMP POWER: " .. HackerTP.jumpPower .. " <"
    end, 5)
    
    createHackerButton("Safety Mode: " .. (HackerTP.safetyMode and "ON" or "OFF"), COLORS.warning, function()
        HackerTP.safetyMode = not HackerTP.safetyMode
        notify("SAFETY.MODE", HackerTP.safetyMode and "ENABLED" or "DISABLED", COLORS.warning)
    end, 6)
    
    createHackerButton("Hack Mode: " .. (HackerTP.hackMode and "ON" or "OFF"), COLORS.danger, function()
        HackerTP.hackMode = not HackerTP.hackMode
        notify("HACK.MODE", HackerTP.hackMode and "ACTIVATED" or "DEACTIVATED", COLORS.danger)
    end, 7)
    
    -- Tab button for opening/closing (matrix style)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = "TabToggle"
    tabButton.Size = UDim2.new(0, 80, 0, 35)
    tabButton.Position = UDim2.new(0.5, -40, 0, 20)
    tabButton.BackgroundColor3 = COLORS.bg
    tabButton.BorderSizePixel = 0
    tabButton.Text = "[ ACCESS ]"
    tabButton.TextColor3 = COLORS.accent
    tabButton.TextScaled = true
    tabButton.Font = Enum.Font.Code
    tabButton.Parent = screenGui
    
    -- Rounded tab button
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 12)
    tabCorner.Parent = tabButton
    
    -- Tab button border
    local tabBorder = Instance.new("UIStroke")
    tabBorder.Color = COLORS.accent
    tabBorder.Thickness = 2
    tabBorder.Parent = tabButton
    
    -- Tab button glow effect
    spawn(function()
        while tabButton.Parent do
            local glowTween = TweenService:Create(tabBorder, TweenInfo.new(2, Enum.EasingStyle.Sine), {
                Transparency = 0
            })
            glowTween:Play()
            glowTween.Completed:Wait()
            
            if tabButton.Parent then
                local fadeGlow = TweenService:Create(tabBorder, TweenInfo.new(2, Enum.EasingStyle.Sine), {
                    Transparency = 0.5
                })
                fadeGlow:Play()
                fadeGlow.Completed:Wait()
            end
        end
    end)
    
    -- Toggle function (center animation)
    local function toggleMenu()
        HackerTP.menuOpen = not HackerTP.menuOpen
        
        if HackerTP.menuOpen then
            -- Show with scale animation from center
            mainFrame.Visible = true
            mainFrame.Size = UDim2.new(0, 0, 0, 0)
            mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            
            local showTween = TweenService:Create(mainFrame, 
                TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), 
                {
                    Size = UDim2.new(0, 280, 0, 320),
                    Position = UDim2.new(0.5, -140, 0.5, -160)
                }
            )
            showTween:Play()
            
            tabButton.Text = "[ CLOSE ]"
            tabBorder.Color = COLORS.danger
            tabButton.TextColor3 = COLORS.danger
        else
            -- Hide with scale animation to center
            local hideTween = TweenService:Create(mainFrame, 
                TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), 
                {
                    Size = UDim2.new(0, 0, 0, 0),
                    Position = UDim2.new(0.5, 0, 0.5, 0)
                }
            )
            hideTween:Play()
            
            hideTween.Completed:Connect(function()
                mainFrame.Visible = false
            end)
            
            tabButton.Text = "[ ACCESS ]"
            tabBorder.Color = COLORS.accent
            tabButton.TextColor3 = COLORS.accent
        end
    end
    
    tabButton.MouseButton1Click:Connect(toggleMenu)
    
    HackerTP.gui = screenGui
    return true
end

-- Advanced teleport system
function instantTeleport()
    if not HackerTP.basePosition then return end
    
    local rootPart = getRootPart()
    local safePos = HackerTP.basePosition + Vector3.new(0, 5, 0)
    
    if HackerTP.safetyMode then
        -- Raycast for safe landing
        local rayResult = workspace:Raycast(safePos, Vector3.new(0, -20, 0))
        if rayResult then
            safePos = rayResult.Position + Vector3.new(0, 4, 0)
        end
    end
    
    -- Teleport with effect
    rootPart.CFrame = CFrame.new(safePos)
    
    -- Visual effect
    if HackerTP.hackMode then
        spawn(function()
            for i = 1, 5 do
                local part = Instance.new("Part")
                part.Name = "TeleportEffect"
                part.Size = Vector3.new(1, 1, 1)
                part.Position = safePos + Vector3.new(math.random(-3, 3), math.random(-1, 3), math.random(-3, 3))
                part.BrickColor = BrickColor.new("Bright green")
                part.Material = Enum.Material.Neon
                part.Anchored = true
                part.CanCollide = false
                part.Parent = workspace
                
                local tween = TweenService:Create(part, TweenInfo.new(1), {
                    Transparency = 1,
                    Size = Vector3.new(0.1, 0.1, 0.1)
                })
                tween:Play()
                
                spawn(function()
                    wait(1)
                    part:Destroy()
                end)
                
                wait(0.1)
            end
        end)
    end
    
    notify("TELEPORT.SUCCESS", "Warped to base location", COLORS.accent)
end

-- Smart jump system
function startSmartJump()
    if HackerTP.isJumping then return end
    
    HackerTP.isJumping = true
    
    local function performJump()
        if not HackerTP.isJumping then return end
        
        local rootPart = getRootPart()
        local humanoid = getHumanoid()
        
        local distance = (HackerTP.basePosition - rootPart.Position).Magnitude
        
        if distance < 8 then
            stopSmartJump()
            wait(0.5)
            instantTeleport()
            return
        end
        
        -- Calculate smart direction
        local direction = (HackerTP.basePosition - rootPart.Position).Unit
        
        -- Add vertical component for long distances
        if distance > 30 then
            direction = direction + Vector3.new(0, 0.4, 0)
        end
        
        -- Backward movement (anti-detection)
        spawn(function()
            local backVelocity = Instance.new("BodyVelocity")
            backVelocity.MaxForce = Vector3.new(4000, 0, 4000)
            backVelocity.Velocity = -direction * 15
            backVelocity.Parent = rootPart
            
            wait(0.15)
            backVelocity:Destroy()
        end)
        
        -- Main jump
        wait(0.2)
        local jumpVelocity = Instance.new("BodyVelocity")
        jumpVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        jumpVelocity.Velocity = direction * HackerTP.jumpPower
        jumpVelocity.Parent = rootPart
        
        spawn(function()
            wait(0.6)
            if jumpVelocity then
                jumpVelocity:Destroy()
            end
        end)
    end
    
    -- Main jumping loop
    HackerTP.connections.jumpLoop = RunService.Heartbeat:Connect(function()
        if not HackerTP.isJumping then return end
        
        local rootPart = getRootPart()
        local humanoid = getHumanoid()
        
        -- Check if grounded
        local rayResult = workspace:Raycast(rootPart.Position, Vector3.new(0, -6, 0))
        if rayResult and humanoid.FloorMaterial ~= Enum.Material.Air then
            wait(0.4) -- Delay between jumps
            performJump()
        end
    end)
    
    performJump() -- First jump
    notify("JUMP.ACTIVATED", "Smart jumping to base...", COLORS.info)
end

function stopSmartJump()
    HackerTP.isJumping = false
    if HackerTP.connections.jumpLoop then
        HackerTP.connections.jumpLoop:Disconnect()
        HackerTP.connections.jumpLoop = nil
    end
    notify("JUMP.STOPPED", "Manual control restored", COLORS.warning)
end

-- Float system
function toggleFloat()
    HackerTP.isFloating = not HackerTP.isFloating
    
    if HackerTP.isFloating then
        startFloat()
    else
        stopFloat()
    end
end

function startFloat()
    local rootPart = getRootPart()
    
    local bodyPos = Instance.new("BodyPosition")
    bodyPos.MaxForce = Vector3.new(0, math.huge, 0)
    bodyPos.Position = rootPart.Position + Vector3.new(0, HackerTP.floatHeight, 0)
    bodyPos.Parent = rootPart
    
    HackerTP.connections.floatLoop = RunService.Heartbeat:Connect(function()
        if not HackerTP.isFloating then return end
        local rootPart = getRootPart()
        bodyPos.Position = rootPart.Position + Vector3.new(0, HackerTP.floatHeight, 0)
    end)
    
    notify("FLOAT.ON", "Hovering at " .. HackerTP.floatHeight .. " studs", COLORS.warning)
end

function stopFloat()
    if HackerTP.connections.floatLoop then
        HackerTP.connections.floatLoop:Disconnect()
        HackerTP.connections.floatLoop = nil
    end
    
    local rootPart = getRootPart()
    for _, obj in pairs(rootPart:GetChildren()) do
        if obj:IsA("BodyPosition") then
            obj:Destroy()
        end
    end
    
    notify("FLOAT.OFF", "Gravity restored", COLORS.info)
end

-- Keyboard controls
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    if input.KeyCode == Enum.KeyCode.Tab then
        if HackerTP.gui and HackerTP.gui.Parent then
            local tabButton = HackerTP.gui:FindFirstChild("TabToggle")
            if tabButton then
                tabButton.MouseButton1Click:Fire()
            end
        end
    elseif input.KeyCode == Enum.KeyCode.T then
        if HackerTP.basePosition then
            instantTeleport()
        end
    elseif input.KeyCode == Enum.KeyCode.J then
        if HackerTP.basePosition then
            if HackerTP.isJumping then
                stopSmartJump()
            else
                startSmartJump()
            end
        end
    elseif input.KeyCode == Enum.KeyCode.F then
        toggleFloat()
    elseif input.KeyCode == Enum.KeyCode.H then
        -- Emergency stop all
        stopSmartJump()
        stopFloat()
        notify("EMERGENCY.STOP", "All systems halted", COLORS.danger)
    end
end)

-- Anti-kick system
if HackerTP.hackMode then
    spawn(function()
        while wait(2 + math.random()) do
            if HackerTP.hackMode then
                local humanoid = getHumanoid()
                local rootPart = getRootPart()
                
                -- Subtle random movements
                if math.random(1, 20) == 1 then
                    local randomOffset = Vector3.new(
                        math.random(-2, 2),
                        0,
                        math.random(-2, 2)
                    )
                    humanoid:MoveTo(rootPart.Position + randomOffset)
                end
            end
        end
    end)
end

-- Character respawn handling
player.CharacterAdded:Connect(function(newChar)
    wait(2) -- Wait for character to fully load
    createHackerGUI()
    notify("SYSTEM.REBOOT", "Hacker TP System reloaded", COLORS.accent)
end)

-- Initialize system
spawn(function()
    wait(1) -- Wait for everything to load
    if createHackerGUI() then
        notify("SYSTEM.ONLINE", "Hacker TP System activated", COLORS.accent)
        print("🔰 HACKER TP SYSTEM V2.0 LOADED")
        print("⌨️  CONTROLS:")
        print("   TAB - Toggle menu")
        print("   T - Instant teleport")
        print("   J - Smart jump toggle")
        print("   F - Float toggle")
        print("   H - Emergency stop")
        print("💚 System ready for operation!")
    else
        notify("ERROR", "Failed to initialize GUI", COLORS.danger)
    end
end)
