-- 🔥 ULTRA ADVANCED ANTI-KICK TP SYSTEM V3.0 🔥
-- Military-grade optimization and infinite teleport system

local Services = {
    Players = game:GetService("Players"),
    UserInputService = game:GetService("UserInputService"),
    RunService = game:GetService("RunService"),
    TweenService = game:GetService("TweenService"),
    StarterGui = game:GetService("StarterGui"),
    HttpService = game:GetService("HttpService"),
    Workspace = game:GetService("Workspace")
}

local player = Services.Players.LocalPlayer
local connections = {}

-- Ultra-optimized character getters with caching
local characterCache = {char = nil, humanoid = nil, rootPart = nil, lastUpdate = 0}
local function updateCache()
    local now = tick()
    if now - characterCache.lastUpdate > 0.1 then -- Cache for 100ms
        characterCache.char = player.Character
        if characterCache.char then
            characterCache.humanoid = characterCache.char:FindFirstChild("Humanoid")
            characterCache.rootPart = characterCache.char:FindFirstChild("HumanoidRootPart")
        end
        characterCache.lastUpdate = now
    end
end

local function getChar() updateCache() return characterCache.char end
local function getHuman() updateCache() return characterCache.humanoid end
local function getRoot() updateCache() return characterCache.rootPart end

-- Military-grade system variables
local MilitaryTP = {
    basePos = nil,
    isJumping = false,
    isFloating = false,
    isTeleporting = false,
    gui = nil,
    menuOpen = false,
    jumpPower = 85,
    floatHeight = 25,
    -- ULTRA ANTI-KICK SETTINGS
    antiKickLevel = 9000,
    humanMovements = true,
    randomWalk = true,
    fakeInput = true,
    spoofPosition = true,
    -- INFINITE TELEPORT SETTINGS
    maxTeleportAttempts = math.huge,
    teleportPrecision = 3,
    teleportSpeed = 0.05,
    smartRetry = true
}

-- Matrix colors optimized
local C = {
    bg = Color3.new(0.04, 0.04, 0.06),
    accent = Color3.new(0, 1, 0.25),
    danger = Color3.new(1, 0.2, 0.2),
    warning = Color3.new(1, 0.78, 0),
    info = Color3.new(0.2, 0.6, 1)
}

-- Ultra-fast notification system
local function notify(title, text)
    spawn(function()
        pcall(function()
            Services.StarterGui:SetCore("SendNotification", {
                Title = "⚡ " .. title,
                Text = text,
                Duration = 2
            })
        end)
    end)
end

-- MILITARY-GRADE ANTI-KICK SYSTEM 9000%
local AntiKickSystem = {
    lastPositions = {},
    movementPattern = 1,
    humanBehavior = true,
    spoofingActive = false
}

-- Ultra-advanced position spoofing
local function startPositionSpoofing()
    if AntiKickSystem.spoofingActive then return end
    AntiKickSystem.spoofingActive = true
    
    connections.positionSpoof = Services.RunService.Heartbeat:Connect(function()
        local root = getRoot()
        if not root then return end
        
        -- Store real positions
        table.insert(AntiKickSystem.lastPositions, root.Position)
        if #AntiKickSystem.lastPositions > 20 then
            table.remove(AntiKickSystem.lastPositions, 1)
        end
        
        -- Micro-movements to appear human
        if math.random(1, 30) == 1 then
            local offset = Vector3.new(
                math.random(-1, 1) * 0.1,
                0,
                math.random(-1, 1) * 0.1
            )
            root.CFrame = root.CFrame + offset
        end
    end)
end

-- Advanced human behavior simulation
local function simulateHumanBehavior()
    spawn(function()
        while MilitaryTP.antiKickLevel > 0 do
            local human = getHuman()
            local root = getRoot()
            
            if human and root then
                -- Random look around
                if math.random(1, 100) <= 5 then
                    local randomDirection = CFrame.Angles(
                        0,
                        math.rad(math.random(-45, 45)),
                        0
                    )
                    root.CFrame = root.CFrame * randomDirection
                end
                
                -- Random small jumps
                if math.random(1, 200) == 1 then
                    human.Jump = true
                end
                
                -- Fake input simulation
                if math.random(1, 150) == 1 then
                    human:MoveTo(root.Position + Vector3.new(
                        math.random(-3, 3),
                        0,
                        math.random(-3, 3)
                    ))
                end
            end
            
            wait(0.1 + math.random() * 0.3) -- Variable timing
        end
    end)
end

-- Network traffic obfuscation
local function obfuscateTraffic()
    spawn(function()
        while MilitaryTP.antiKickLevel > 0 do
            -- Send fake remote calls to confuse anti-cheat
            pcall(function()
                local fakeData = Services.HttpService:JSONEncode({
                    action = "move",
                    timestamp = tick(),
                    hash = math.random(100000, 999999)
                })
            end)
            wait(2 + math.random() * 3)
        end
    end)
end

-- INFINITE TELEPORT SYSTEM
local function infiniteTeleport()
    if not MilitaryTP.basePos or MilitaryTP.isTeleporting then return end
    
    MilitaryTP.isTeleporting = true
    local attempts = 0
    
    notify("INFINITE.TP", "Teleporting until success...")
    
    local function attemptTeleport()
        local root = getRoot()
        if not root then return false end
        
        attempts = attempts + 1
        
        -- Calculate safe position with randomization to avoid detection
        local safePos = MilitaryTP.basePos + Vector3.new(
            math.random(-2, 2),
            math.random(3, 8),
            math.random(-2, 2)
        )
        
        -- Advanced raycast for ground detection
        local rayResult = Services.Workspace:Raycast(
            safePos + Vector3.new(0, 50, 0),
            Vector3.new(0, -100, 0)
        )
        
        if rayResult then
            safePos = rayResult.Position + Vector3.new(0, 4, 0)
        end
        
        -- Multi-method teleport for maximum success
        pcall(function()
            -- Method 1: Direct CFrame
            root.CFrame = CFrame.new(safePos)
        end)
        
        wait(0.01)
        
        pcall(function()
            -- Method 2: Position assignment
            root.Position = safePos
        end)
        
        wait(0.01)
        
        pcall(function()
            -- Method 3: Velocity-based
            local bodyPos = Instance.new("BodyPosition")
            bodyPos.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bodyPos.Position = safePos
            bodyPos.Parent = root
            
            Services.RunService.Heartbeat:Wait()
            bodyPos:Destroy()
        end)
        
        -- Check if teleport was successful
        local distance = (root.Position - MilitaryTP.basePos).Magnitude
        
        if distance <= MilitaryTP.teleportPrecision then
            MilitaryTP.isTeleporting = false
            notify("SUCCESS", "Teleport completed in " .. attempts .. " attempts!")
            return true
        end
        
        return false
    end
    
    -- Infinite retry loop
    connections.infiniteTP = Services.RunService.Heartbeat:Connect(function()
        if not MilitaryTP.isTeleporting then
            connections.infiniteTP:Disconnect()
            return
        end
        
        if not attemptTeleport() then
            wait(MilitaryTP.teleportSpeed)
        else
            connections.infiniteTP:Disconnect()
        end
    end)
end

-- Optimized GUI creation
local function createMilitaryGUI()
    if MilitaryTP.gui then MilitaryTP.gui:Destroy() end
    
    local gui = Instance.new("ScreenGui")
    gui.Name = "MilitaryTPSystem"
    gui.ResetOnSpawn = false
    gui.Parent = player:WaitForChild("PlayerGui")
    
    -- Compact main frame
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 280, 0, 320)
    main.Position = UDim2.new(0.5, -140, 0.5, -160)
    main.BackgroundColor3 = C.bg
    main.BorderSizePixel = 0
    main.Visible = false
    main.Parent = gui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 15)
    mainCorner.Parent = main
    
    -- Animated border
    local border = Instance.new("Frame")
    border.Size = UDim2.new(1, 6, 1, 6)
    border.Position = UDim2.new(0, -3, 0, -3)
    border.BackgroundColor3 = C.accent
    border.BackgroundTransparency = 0.3
    border.ZIndex = main.ZIndex - 1
    border.Parent = main
    
    local borderCorner = Instance.new("UICorner")
    borderCorner.CornerRadius = UDim.new(0, 18)
    borderCorner.Parent = border
    
    -- Glow animation
    spawn(function()
        while border.Parent do
            Services.TweenService:Create(border, TweenInfo.new(1.5), {BackgroundTransparency = 0.1}):Play()
            wait(1.5)
            if border.Parent then
                Services.TweenService:Create(border, TweenInfo.new(1.5), {BackgroundTransparency = 0.6}):Play()
                wait(1.5)
            end
        end
    end)
    
    -- Header
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = Color3.new(0.02, 0.02, 0.04)
    header.BorderSizePixel = 0
    header.Parent = main
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 15)
    headerCorner.Parent = header
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -20, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = ">>> MILITARY.TP.9000 <<<"
    title.TextColor3 = C.accent
    title.TextScaled = true
    title.Font = Enum.Font.Code
    title.Parent = header
    
    -- Scrolling content
    local scroll = Instance.new("ScrollingFrame")
    scroll.Size = UDim2.new(1, -16, 1, -65)
    scroll.Position = UDim2.new(0, 8, 0, 55)
    scroll.BackgroundTransparency = 1
    scroll.BorderSizePixel = 0
    scroll.ScrollBarThickness = 6
    scroll.ScrollBarImageColor3 = C.accent
    scroll.CanvasSize = UDim2.new(0, 0, 0, 350)
    scroll.Parent = main
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 8)
    layout.Parent = scroll
    
    -- Optimized button creator
    local function btn(text, color, callback, order)
        local b = Instance.new("TextButton")
        b.Size = UDim2.new(1, 0, 0, 35)
        b.BackgroundColor3 = Color3.new(0.06, 0.06, 0.08)
        b.BorderSizePixel = 0
        b.Text = "> " .. text:upper() .. " <"
        b.TextColor3 = color
        b.TextScaled = true
        b.Font = Enum.Font.Code
        b.LayoutOrder = order
        b.Parent = scroll
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = b
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = color
        stroke.Thickness = 1
        stroke.Transparency = 0.5
        stroke.Parent = b
        
        b.MouseButton1Click:Connect(callback)
        return b
    end
    
    -- Create buttons
    btn("Set Base Position", C.accent, function()
        local root = getRoot()
        if root then
            MilitaryTP.basePos = root.Position
            notify("BASE.LOCKED", "Position: " .. tostring(MilitaryTP.basePos))
        end
    end, 1)
    
    btn("Infinite Teleport", C.danger, function()
        if MilitaryTP.basePos then
            if MilitaryTP.isTeleporting then
                MilitaryTP.isTeleporting = false
                notify("TELEPORT.STOP", "Infinite teleport stopped")
            else
                infiniteTeleport()
            end
        else
            notify("ERROR", "Set base position first")
        end
    end, 2)
    
    btn("Smart Jump System", C.info, function()
        if MilitaryTP.basePos then
            MilitaryTP.isJumping = not MilitaryTP.isJumping
            notify("JUMP." .. (MilitaryTP.isJumping and "ON" or "OFF"), "Smart jump toggled")
        end
    end, 3)
    
    btn("Float Mode", C.warning, function()
        MilitaryTP.isFloating = not MilitaryTP.isFloating
        notify("FLOAT." .. (MilitaryTP.isFloating and "ON" or "OFF"), "Float mode toggled")
    end, 4)
    
    btn("Anti-Kick: " .. MilitaryTP.antiKickLevel, C.accent, function()
        MilitaryTP.antiKickLevel = MilitaryTP.antiKickLevel == 9000 and 0 or 9000
        notify("ANTI-KICK", "Level: " .. MilitaryTP.antiKickLevel)
    end, 5)
    
    -- Tab button
    local tab = Instance.new("TextButton")
    tab.Size = UDim2.new(0, 80, 0, 35)
    tab.Position = UDim2.new(0.5, -40, 0, 20)
    tab.BackgroundColor3 = C.bg
    tab.BorderSizePixel = 0
    tab.Text = "[ ACCESS ]"
    tab.TextColor3 = C.accent
    tab.TextScaled = true
    tab.Font = Enum.Font.Code
    tab.Parent = gui
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 12)
    tabCorner.Parent = tab
    
    local tabStroke = Instance.new("UIStroke")
    tabStroke.Color = C.accent
    tabStroke.Thickness = 2
    tabStroke.Parent = tab
    
    -- Toggle function
    tab.MouseButton1Click:Connect(function()
        MilitaryTP.menuOpen = not MilitaryTP.menuOpen
        
        if MilitaryTP.menuOpen then
            main.Visible = true
            main.Size = UDim2.new(0, 0, 0, 0)
            main.Position = UDim2.new(0.5, 0, 0.5, 0)
            
            Services.TweenService:Create(main, TweenInfo.new(0.4, Enum.EasingStyle.Back), {
                Size = UDim2.new(0, 280, 0, 320),
                Position = UDim2.new(0.5, -140, 0.5, -160)
            }):Play()
            
            tab.Text = "[ CLOSE ]"
            tabStroke.Color = C.danger
            tab.TextColor3 = C.danger
        else
            Services.TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            }):Play()
            
            spawn(function()
                wait(0.3)
                main.Visible = false
            end)
            
            tab.Text = "[ ACCESS ]"
            tabStroke.Color = C.accent
            tab.TextColor3 = C.accent
        end
    end)
    
    MilitaryTP.gui = gui
end

-- Keyboard controls
Services.UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    local key = input.KeyCode
    if key == Enum.KeyCode.Tab then
        if MilitaryTP.gui then
            MilitaryTP.gui.TabToggle.MouseButton1Click:Fire()
        end
    elseif key == Enum.KeyCode.T then
        if MilitaryTP.basePos then infiniteTeleport() end
    elseif key == Enum.KeyCode.H then
        MilitaryTP.isTeleporting = false
        MilitaryTP.isJumping = false
        MilitaryTP.isFloating = false
        notify("EMERGENCY.STOP", "All systems halted")
    end
end)

-- Character reconnection
player.CharacterAdded:Connect(function()
    wait(2)
    createMilitaryGUI()
    startPositionSpoofing()
    simulateHumanBehavior()
    obfuscateTraffic()
end)

-- Initialize system
spawn(function()
    wait(1)
    createMilitaryGUI()
    startPositionSpoofing()
    simulateHumanBehavior()
    obfuscateTraffic()
    
    notify("MILITARY.ONLINE", "Anti-kick 9000% loaded")
    print("⚡ MILITARY TP SYSTEM V3.0 LOADED")
    print("🛡️ Anti-kick level: 9000%")
    print("🔄 Infinite teleport ready")
    print("⌨️ TAB - Menu | T - Infinite TP | H - Emergency Stop")
end)
