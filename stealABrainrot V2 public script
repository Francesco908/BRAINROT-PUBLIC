-- Sigma Hub Universal Script
-- Made by Znfpro

-- Protezione base
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Variabili globali
local basePosition = nil
local isMovingToBase = false
local gui = nil

-- Attendi il personaggio
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Creazione GUI semplice
local function createGUI()
    -- Crea ScreenGui
    gui = Instance.new("ScreenGui")
    gui.Name = "SigmaHub"
    gui.Parent = player:WaitForChild("PlayerGui")
    
    -- Logo iniziale
    local logo = Instance.new("TextLabel")
    logo.Size = UDim2.new(0.4, 0, 0.1, 0)
    logo.Position = UDim2.new(0.3, 0, 0.3, 0)
    logo.BackgroundTransparency = 1
    logo.Text = "Made by Znfpro"
    logo.TextColor3 = Color3.new(1, 1, 1)
    logo.TextScaled = true
    logo.Font = Enum.Font.SourceSansBold
    logo.Parent = gui
    
    -- Fade in/out del logo
    for i = 1, 0, -0.1 do
        logo.TextTransparency = i
        wait(0.05)
    end
    
    wait(2)
    
    for i = 0, 1, 0.1 do
        logo.TextTransparency = i
        wait(0.05)
    end
    
    logo:Destroy()
    
    -- Crea pulsante principale
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.15, 0, 0.08, 0)
    button.Position = UDim2.new(0.425, 0, 0.1, 0)
    button.BackgroundColor3 = Color3.new(0, 0, 0)
    button.Text = "Set Base"
    button.TextColor3 = Color3.new(1, 1, 1)
    button.TextScaled = true
    button.Font = Enum.Font.SourceSans
    button.Parent = gui
    
    -- Angoli arrotondati
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.3, 0)
    corner.Parent = button
    
    -- Drag functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Click functionality
    button.MouseButton1Click:Connect(function()
        if button.Text == "Set Base" then
            basePosition = rootPart.CFrame
            button.Text = "Steal Rainbow"
            print("Base position saved!")
        elseif button.Text == "Steal Rainbow" then
            stealRainbow()
        end
    end)
end

-- God Mode semplice
local function enableGodMode()
    spawn(function()
        while isMovingToBase do
            if humanoid then
                humanoid.MaxHealth = math.huge
                humanoid.Health = humanoid.MaxHealth
            end
            wait(0.1)
        end
    end)
end

-- Funzione Steal Rainbow
function stealRainbow()
    if not basePosition or isMovingToBase then return end
    
    isMovingToBase = true
    enableGodMode()
    
    -- Suono
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://76714680193450"
    sound.Volume = 0.5
    sound.Parent = workspace
    sound:Play()
    
    -- Movimento verso la base
    spawn(function()
        while isMovingToBase do
            local distance = (basePosition.Position - rootPart.Position).Magnitude
            
            if distance < 5 then
                isMovingToBase = false
                rootPart.CFrame = basePosition
                print("Arrivato alla base!")
                sound:Destroy()
                break
            end
            
            -- Calcola direzione
            local direction = (basePosition.Position - rootPart.Position).Unit
            
            -- Movimento veloce
            humanoid.WalkSpeed = 100
            humanoid:MoveTo(basePosition.Position)
            
            -- Salto automatico
            if humanoid.FloorMaterial ~= Enum.Material.Air then
                humanoid.Jump = true
                wait(0.5)
            end
            
            wait(0.1)
        end
        
        -- Reset velocitÃ 
        humanoid.WalkSpeed = 16
    end)
end

-- Gestione respawn
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoid = newChar:WaitForChild("Humanoid")
    rootPart = newChar:WaitForChild("HumanoidRootPart")
    wait(1)
    createGUI()
end)

-- Avvia GUI
createGUI()
print("Sigma Hub loaded successfully!")
