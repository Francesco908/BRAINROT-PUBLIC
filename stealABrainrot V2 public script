-- LocalScript placed in StarterGui > ScreenGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local PhysicsService = game:GetService("PhysicsService")

-- CONFIGURATION
local Config = {
    GuiSize = UDim2.new(0, 220, 0, 120),
    FlyHeight = 30,
    FlyDuration = 1,
    SpinDuration = 2,
    BypassJitter = 0.5,
    CollisionGroup = "NoClip",
    OpenSoundId = "rbxassetid://601964720" -- example sound
}

-- Setup custom collision group
if not pcall(function() PhysicsService:GetCollisionGroupId(Config.CollisionGroup) end) then
    PhysicsService:CreateCollisionGroup(Config.CollisionGroup)
    PhysicsService:CollisionGroupSetCollidable(Config.CollisionGroup, Config.CollisionGroup, false)
end

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
PhysicsService:SetPartCollisionGroup(hrp, Config.CollisionGroup)

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SigmaHubGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Play open sound
local sound = Instance.new("Sound")
sound.SoundId = Config.OpenSoundId
sound.Volume = 1
sound.Parent = screenGui
sound:Play()

-- Main Frame
local frame = Instance.new("Frame")
frame.Name = "SigmaHubFrame"
frame.Size = Config.GuiSize
frame.Position = UDim2.new(0.5, -Config.GuiSize.X.Offset/2, 0.5, -Config.GuiSize.Y.Offset/2)
frame.BackgroundTransparency = 0.3
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui

-- Make entire frame draggable
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        frame.Dragging = true
        frame.DragStart = input.Position
        frame.StartPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                frame.Dragging = false
            end
        end)
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if frame.Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - frame.DragStart
        frame.Position = UDim2.new(
            frame.StartPos.X.Scale, frame.StartPos.X.Offset + delta.X,
            frame.StartPos.Y.Scale, frame.StartPos.Y.Offset + delta.Y
        )
    end
end)

-- Button Factory
local function createButton(text, posY)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.Text = text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.TextColor3 = Color3.new(0,0,0)
    btn.BackgroundTransparency = 0.2
    btn.BorderSizePixel = 0
    btn.Parent = frame
    return btn
end

local flyBtn = createButton("Bypass Fly to Base", 40)
local saveBtn = createButton("Save Base Position", 80)

-- Rainbow Animation
local hue = 0
RunService.RenderStepped:Connect(function(dt)
    hue = (hue + dt * 0.4) % 1
    local c1 = Color3.fromHSV(hue, 1, 1)
    local c2 = Color3.fromHSV((hue + 0.5) % 1, 1, 1)
    flyBtn.BackgroundColor3 = c1
    saveBtn.BackgroundColor3 = c2
end)

-- Advanced Bypass Fly Logic
local function bypassFly()
    local baseAttr = player:GetAttribute("BasePosition")
    if not baseAttr then return warn("Base not set.") end
    local nums = {}
    for n in baseAttr:gmatch("[-%d%.]+") do table.insert(nums, tonumber(n)) end
    local basePos = Vector3.new(nums[1], nums[2], nums[3])
    local peakPos = basePos + Vector3.new(0, Config.FlyHeight, 0)

    hrp:SetNetworkOwner(player)
    humanoid:ChangeState(Enum.HumanoidStateType.Physics)

    -- Tween ascent
    local tweenUp = TweenService:Create(hrp, TweenInfo.new(Config.FlyDuration, Enum.EasingStyle.Quad), {CFrame = CFrame.new(peakPos)})
    tweenUp:Play(); tweenUp.Completed:Wait()
    -- Jitter
    for i=1,5 do hrp.CFrame = hrp.CFrame + Vector3.new(math.random()-0.5, math.random()-0.5, math.random()-0.5)*Config.BypassJitter; RunService.Heartbeat:Wait() end
    -- Tween descent
    local tweenDown = TweenService:Create(hrp, TweenInfo.new(Config.FlyDuration, Enum.EasingStyle.Quad), {CFrame = CFrame.new(basePos)})
    tweenDown:Play(); tweenDown.Completed:Wait()
    -- Spin flair
    TweenService:Create(hrp, TweenInfo.new(Config.SpinDuration, Enum.EasingStyle.Linear), {CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(360), 0)}):Play():Completed:Wait()

    humanoid:ChangeState(Enum.HumanoidStateType.Running)
end

flyBtn.MouseButton1Click:Connect(bypassFly)
saveBtn.MouseButton1Click:Connect(function()
    player:SetAttribute("BasePosition", tostring(hrp.Position))
    print("Base saved:", hrp.Position)
end)

print("Sigma Hub v9000+ loaded with sound and full drag.")
