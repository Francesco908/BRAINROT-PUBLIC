-- LocalScript placed in StarterGui > ScreenGui

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdminToolsGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main draggable Frame
local frame = Instance.new("Frame")
frame.Name = "ToolFrame"
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui

-- Title label (acts as drag handle)
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 24)
title.BackgroundTransparency = 1
title.Text = "Admin vs Admin"
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        frame.Dragging = true
        frame.DragStart = input.Position
        frame.StartPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                frame.Dragging = false
            end
        end)
    end
end)

-- Handle dragging for mouse and touch
local function updateDrag(input)
    if frame.Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - frame.DragStart
        frame.Position = UDim2.new(
            frame.StartPos.X.Scale,
            frame.StartPos.X.Offset + delta.X,
            frame.StartPos.Y.Scale,
            frame.StartPos.Y.Offset + delta.Y
        )
    end
end
UserInputService.InputChanged:Connect(updateDrag)

-- Buttons
local function createButton(name, text, posY)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Size = UDim2.new(1, -10, 0, 32)
    btn.Position = UDim2.new(0, 5, 0, posY)
    btn.Text = text
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.TextColor3 = Color3.new(0,0,0)
    btn.BorderSizePixel = 0
    btn.Parent = frame
    return btn
end

local flyBtn = createButton("FlyToBase", "Fly to Base", 30)
local baseBtn = createButton("SetBasePos", "Set Base Position", 70)

-- Rainbow effect
local hue = 0
RunService.RenderStepped:Connect(function(dt)
    hue = (hue + dt * 0.3) % 1
    local rainbow = Color3.fromHSV(hue, 1, 1)
    flyBtn.BackgroundColor3 = rainbow
    baseBtn.BackgroundColor3 = Color3.new(0,0,0):Lerp(rainbow, 0.5)
end)

-- Advanced flight function with BodyPosition, BodyGyro and Humanoid physics state
local function flyToBase()
    local baseAttr = player:GetAttribute("BasePosition")
    if not baseAttr then warn("Base position not set.") return end
    local coords = {}
    for num in baseAttr:gmatch("[-%d%.]+") do coords[#coords+1] = tonumber(num) end
    if #coords < 3 then return end
    local basePos = Vector3.new(coords[1], coords[2], coords[3])
    local peak = basePos + Vector3.new(0, 30, 0)

    humanoid:ChangeState(Enum.HumanoidStateType.Physics)

    local bp = Instance.new("BodyPosition")
    bp.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    bp.P = 5000
    bp.D = 500
    bp.Position = peak
    bp.Parent = hrp

    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e7, 1e7, 1e7)
    bg.P = 10000
    bg.D = 1000
    bg.CFrame = hrp.CFrame
    bg.Parent = hrp

    local startTime = tick()
    local conn
    conn = RunService.Heartbeat:Connect(function()
        local elapsed = tick() - startTime
        local target = (elapsed < 1 and peak) or basePos
        bp.Position = target

        local angle = (elapsed * math.pi) % (2*math.pi)
        bg.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, angle, 0)

        if (hrp.Position - basePos).Magnitude < 2 then
            bp:Destroy()
            bg:Destroy()
            conn:Disconnect()
            humanoid:ChangeState(Enum.HumanoidStateType.Running)
        end
    end)
end

flyBtn.MouseButton1Click:Connect(flyToBase)
baseBtn.MouseButton1Click:Connect(function()
    player:SetAttribute("BasePosition", tostring(hrp.Position))
    print("Base position saved:", hrp.Position)
end)

print("Admin Tools GUI loaded with mobile drag support, advanced flight.")
