-- Sigma Hub v10 - Mobile Advanced Hax
-- Features: Infinite Jump, God Mode, Advanced Speed Coil Simulation

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local backpack = player:WaitForChild("Backpack")

-- Variabili principali
local infiniteJumpEnabled = false
local godModeEnabled = false
local speedBoostEnabled = false
local originalWalkSpeed = humanoid.WalkSpeed
local originalJumpPower = humanoid.JumpPower
local targetSpeed = 100
local jumpDebounce = false

-- Connessioni
local jumpConnection
local speedConnection
local godModeConnection
local heartbeatConnection

-- GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SigmaHubv10"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame (Draggable)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.Position = UDim2.new(0.1, 0, 0.05, 0)
mainFrame.Size = UDim2.new(0, 500, 0, 220)
mainFrame.Active = true
mainFrame.Draggable = true

-- Corner per rounded edges
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- Gradient per stile
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Header
local header = Instance.new("Frame")
header.Name = "Header"
header.Parent = mainFrame
header.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
header.BackgroundTransparency = 0.2
header.BorderSizePixel = 0
header.Size = UDim2.new(1, 0, 0, 50)

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

-- Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Parent = header
title.BackgroundTransparency = 1
title.Position = UDim2.new(0, 15, 0, 0)
title.Size = UDim2.new(0.7, 0, 1, 0)
title.Font = Enum.Font.GothamBold
title.Text = "Sigma Hub v10"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Parent = header
closeButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -45, 0.5, -12.5)
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Font = Enum.Font.GothamBold
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Parent = mainFrame
contentFrame.BackgroundTransparency = 1
contentFrame.Position = UDim2.new(0, 0, 0, 60)
contentFrame.Size = UDim2.new(1, 0, 1, -60)

-- Funzione per creare switch
local function createSwitch(parent, text, position, callback)
    local switchFrame = Instance.new("Frame")
    switchFrame.Name = text .. "Switch"
    switchFrame.Parent = parent
    switchFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
    switchFrame.BorderSizePixel = 0
    switchFrame.Position = position
    switchFrame.Size = UDim2.new(0.48, 0, 0, 40)
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(0, 8)
    switchCorner.Parent = switchFrame
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Parent = switchFrame
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Size = UDim2.new(0.65, 0, 1, 0)
    label.Font = Enum.Font.GothamMedium
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = switchFrame
    toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    toggleButton.BorderSizePixel = 0
    toggleButton.Position = UDim2.new(1, -40, 0.5, -10)
    toggleButton.Size = UDim2.new(0, 35, 0, 20)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Text = "OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 10)
    toggleCorner.Parent = toggleButton
    
    local isEnabled = false
    
    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        if isEnabled then
            toggleButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
            toggleButton.Text = "ON"
        else
            toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
            toggleButton.Text = "OFF"
        end
        
        callback(isEnabled)
    end)
    
    return switchFrame, toggleButton
end

-- Infinite Jump Switch
local infiniteJumpSwitch, infiniteJumpToggle = createSwitch(
    contentFrame, 
    "Infinite Jump", 
    UDim2.new(0.02, 0, 0.05, 0),
    function(enabled)
        infiniteJumpEnabled = enabled
        if enabled then
            enableInfiniteJump()
        else
            disableInfiniteJump()
        end
    end
)

-- God Mode Switch
local godModeSwitch, godModeToggle = createSwitch(
    contentFrame, 
    "God Mode", 
    UDim2.new(0.52, 0, 0.05, 0),
    function(enabled)
        godModeEnabled = enabled
        if enabled then
            enableGodMode()
        else
            disableGodMode()
        end
    end
)

-- Speed Boost Switch
local speedBoostSwitch, speedBoostToggle = createSwitch(
    contentFrame, 
    "Speed Boost", 
    UDim2.new(0.02, 0, 0.35, 0),
    function(enabled)
        speedBoostEnabled = enabled
        if enabled then
            enableSpeedBoost()
        else
            disableSpeedBoost()
        end
    end
)

-- Status Display
local statusFrame = Instance.new("Frame")
statusFrame.Name = "StatusFrame"
statusFrame.Parent = contentFrame
statusFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
statusFrame.BorderSizePixel = 0
statusFrame.Position = UDim2.new(0.02, 0, 0.65, 0)
statusFrame.Size = UDim2.new(0.96, 0, 0.25, 0)

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 8)
statusCorner.Parent = statusFrame

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Parent = statusFrame
statusLabel.BackgroundTransparency = 1
statusLabel.Size = UDim2.new(1, 0, 1, 0)
statusLabel.Font = Enum.Font.GothamMedium
statusLabel.Text = "Status: Ready"
statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
statusLabel.TextScaled = true

-- Funzioni avanzate
function enableGodMode()
    if not humanoid then return end
    
    -- Protezione da danni
    if godModeConnection then godModeConnection:Disconnect() end
    
    godModeConnection = humanoid.HealthChanged:Connect(function()
        if godModeEnabled and humanoid.Health < humanoid.MaxHealth then
            humanoid.Health = humanoid.MaxHealth
        end
    end)
    
    -- Imposta la salute al massimo
    humanoid.Health = humanoid.MaxHealth
    
    -- Protezione aggiuntiva
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
    
    statusLabel.Text = "GOD MODE: ACTIVATED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
end

function disableGodMode()
    if godModeConnection then
        godModeConnection:Disconnect()
        godModeConnection = nil
    end
    
    -- Ripristina collisioni
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    
    statusLabel.Text = "God Mode: DISABLED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
end

function enableInfiniteJump()
    if jumpConnection then jumpConnection:Disconnect() end
    
    jumpConnection = UserInputService.JumpRequest:Connect(function()
        if infiniteJumpEnabled and humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Jumping then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
    
    statusLabel.Text = "INFINITE JUMP: ACTIVATED"
    statusLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
end

function disableInfiniteJump()
    if jumpConnection then
        jumpConnection:Disconnect()
        jumpConnection = nil
    end
    statusLabel.Text = "Infinite Jump: DISABLED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
end

function findRealSpeedCoil()
    -- Ricerca nel Marketplace
    local productId = nil
    local searchTerm = "Speed Coil"
    
    pcall(function()
        local results = MarketplaceService:GetProducts(nil, searchTerm, 1)
        if #results > 0 then
            productId = results[1].TargetId
        end
    end)
    
    return productId
end

function simulateSpeedCoilEffect()
    if not humanoid then return end
    
    -- Salva velocit√† originale
    originalWalkSpeed = humanoid.WalkSpeed
    
    -- Applica effetto velocit√†
    humanoid.WalkSpeed = targetSpeed
    
    -- Sistema avanzato di movimento
    if speedConnection then speedConnection:Disconnect() end
    
    speedConnection = RunService.Heartbeat:Connect(function(delta)
        if speedBoostEnabled and humanoid then
            -- Mantieni la velocit√†
            if humanoid.WalkSpeed ~= targetSpeed then
                humanoid.WalkSpeed = targetSpeed
            end
            
            -- Movimento fluido avanzato
            if humanoid.MoveDirection.Magnitude > 0 then
                local moveVector = humanoid.MoveDirection * targetSpeed
                rootPart.Velocity = Vector3.new(moveVector.X, rootPart.Velocity.Y, moveVector.Z)
            end
        end
    end)
end

function enableSpeedBoost()
    if not humanoid then return end
    
    -- Cerca il vero Speed Coil
    local coilId = findRealSpeedCoil()
    
    if coilId then
        statusLabel.Text = "SPEED COIL: ACQUIRED"
        statusLabel.TextColor3 = Color3.fromRGB(50, 200, 50)
    else
        statusLabel.Text = "SPEED COIL: SIMULATED"
        statusLabel.TextColor3 = Color3.fromRGB(200, 150, 50)
    end
    
    -- Applica l'effetto indipendentemente dal possesso
    simulateSpeedCoilEffect()
end

function disableSpeedBoost()
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = nil
    end
    
    -- Ripristina velocit√†
    if humanoid then
        humanoid.WalkSpeed = originalWalkSpeed
    end
    
    statusLabel.Text = "Speed Boost: DISABLED"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
end

-- GUI Controls
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Character respawn handling
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = newCharacter:WaitForChild("Humanoid")
    rootPart = newCharacter:WaitForChild("HumanoidRootPart")
    
    -- Riattiva funzioni se erano abilitate
    wait(1)
    
    if infiniteJumpEnabled then
        enableInfiniteJump()
    end
    
    if godModeEnabled then
        enableGodMode()
    end
    
    if speedBoostEnabled then
        enableSpeedBoost()
    end
end)

-- Anti-Reset
screenGui.DescendantRemoving:Connect(function(descendant)
    if descendant == screenGui then
        screenGui.Parent = playerGui
    end
end)

print("Sigma Hub v10 loaded successfully!")
print("Features: Infinite Jump + God Mode, Advanced Speed Coil Simulation")
