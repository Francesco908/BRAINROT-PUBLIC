-- Modified GUI Script - Test V1 Only
-- Simplified system with god mode and float flight

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Variables for movement systems
local isTestV1Active = false
local basePosition = nil
local testV1Connection = nil
local godModeConnection = nil
local floatHeight = 50

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdvancedStealGUI"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main Frame (Draggable)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 300, 0, 180)
mainFrame.Position = UDim2.new(0.5, -150, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BackgroundTransparency = 0.15
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

-- Frame styling
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = mainFrame

local frameStroke = Instance.new("UIStroke")
frameStroke.Color = Color3.fromRGB(0, 255, 150)
frameStroke.Thickness = 2
frameStroke.Parent = mainFrame

-- Advanced glow effect
local glowFrame = Instance.new("Frame")
glowFrame.Name = "GlowFrame"
glowFrame.Parent = mainFrame
glowFrame.Size = UDim2.new(1, 8, 1, 8)
glowFrame.Position = UDim2.new(0, -4, 0, -4)
glowFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
glowFrame.BackgroundTransparency = 0.85
glowFrame.ZIndex = -1

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(0, 16)
glowCorner.Parent = glowFrame

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Parent = mainFrame
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Steal a brainrot"
titleLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.Code
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Parent = mainFrame
statusLabel.Size = UDim2.new(1, -20, 0, 20)
statusLabel.Position = UDim2.new(0, 10, 0, 45)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status: READY | Immortal Mode: ON"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Code
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Set Base Position Button
local setBaseBtn = Instance.new("TextButton")
setBaseBtn.Name = "SetBaseBtn"
setBaseBtn.Parent = mainFrame
setBaseBtn.Size = UDim2.new(1, -20, 0, 30)
setBaseBtn.Position = UDim2.new(0, 10, 0, 75)
setBaseBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
setBaseBtn.BackgroundTransparency = 0.2
setBaseBtn.Text = "SET BASE POSITION"
setBaseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
setBaseBtn.TextScaled = true
setBaseBtn.Font = Enum.Font.Code
setBaseBtn.BorderSizePixel = 0

local setBaseBtnCorner = Instance.new("UICorner")
setBaseBtnCorner.CornerRadius = UDim.new(0, 6)
setBaseBtnCorner.Parent = setBaseBtn

local setBaseBtnStroke = Instance.new("UIStroke")
setBaseBtnStroke.Color = Color3.fromRGB(120, 120, 120)
setBaseBtnStroke.Thickness = 1
setBaseBtnStroke.Parent = setBaseBtn

-- Test V1 Button (now centered and larger)
local testV1Btn = Instance.new("TextButton")
testV1Btn.Name = "TestV1Btn"
testV1Btn.Parent = mainFrame
testV1Btn.Size = UDim2.new(1, -20, 0, 35)
testV1Btn.Position = UDim2.new(0, 10, 0, 115)
testV1Btn.BackgroundColor3 = Color3.fromRGB(25, 25, 60)
testV1Btn.BackgroundTransparency = 0.2
testV1Btn.Text = "TEST V1"
testV1Btn.TextColor3 = Color3.fromRGB(120, 120, 255)
testV1Btn.TextScaled = true
testV1Btn.Font = Enum.Font.Code
testV1Btn.BorderSizePixel = 0

local testV1BtnCorner = Instance.new("UICorner")
testV1BtnCorner.CornerRadius = UDim.new(0, 6)
testV1BtnCorner.Parent = testV1Btn

local testV1BtnStroke = Instance.new("UIStroke")
testV1BtnStroke.Color = Color3.fromRGB(120, 120, 255)
testV1BtnStroke.Thickness = 2
testV1BtnStroke.Parent = testV1Btn

-- Info Label
local infoLabel = Instance.new("TextLabel")
infoLabel.Name = "InfoLabel"
infoLabel.Parent = mainFrame
infoLabel.Size = UDim2.new(1, -20, 0, 25)
infoLabel.Position = UDim2.new(0, 10, 0, 155)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Test V1: Horizontal float flight to base"
infoLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
infoLabel.TextScaled = true
infoLabel.Font = Enum.Font.Code
infoLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Advanced hover effects
local function createAdvancedHoverEffect(button, hoverColor, normalColor, glowColor)
    local buttonStroke = button:FindFirstChild("UIStroke")
    
    button.MouseEnter:Connect(function()
        local tween1 = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor})
        local tween2 = TweenService:Create(buttonStroke, TweenInfo.new(0.2), {Color = glowColor})
        tween1:Play()
        tween2:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween1 = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor})
        local tween2 = TweenService:Create(buttonStroke, TweenInfo.new(0.2), {Color = buttonStroke.Color})
        tween1:Play()
        tween2:Play()
    end)
end

createAdvancedHoverEffect(setBaseBtn, Color3.fromRGB(65, 65, 65), Color3.fromRGB(45, 45, 45), Color3.fromRGB(200, 200, 200))
createAdvancedHoverEffect(testV1Btn, Color3.fromRGB(35, 35, 80), Color3.fromRGB(25, 25, 60), Color3.fromRGB(150, 150, 255))

-- Advanced God Mode System
local function enableAdvancedGodMode()
    local character = player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return end
    
    -- Set maximum health and heal
    humanoid.MaxHealth = math.huge
    humanoid.Health = math.huge
    
    -- Prevent death completely
    humanoid.Died:Connect(function()
        wait(0.1)
        humanoid.Health = math.huge
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
    end)
    
    -- Block all damage and status effects
    humanoid.HealthChanged:Connect(function()
        if humanoid.Health < humanoid.MaxHealth then
            humanoid.Health = math.huge
        end
    end)
    
    -- Continuous protection
    godModeConnection = RunService.Heartbeat:Connect(function()
        if humanoid and humanoid.Parent then
            if humanoid.Health <= 0 or humanoid.Health < math.huge then
                humanoid.Health = math.huge
                humanoid.MaxHealth = math.huge
            end
            
            -- Force regeneration state
            if humanoid:GetState() == Enum.HumanoidStateType.Dead then
                humanoid:ChangeState(Enum.HumanoidStateType.Running)
            end
            
            -- Reset any damage
            humanoid.PlatformStand = false
        end
    end)
    
    -- Additional protection for body parts
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
            -- Prevent part destruction
            part.AncestryChanged:Connect(function()
                if not part.Parent and character.Parent then
                    part.Parent = character
                end
            end)
        end
    end
end

-- Test V1 System (Ultra Stable Float Flight)
local testV1LastPos = nil
local testV1ForceCounter = 0

local function ultraStableFloatSystem()
    local character = player.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart or not basePosition then return end
    
    local currentPos = rootPart.Position
    local targetPos = basePosition
    
    -- Calculate horizontal target maintaining current height
    local horizontalTarget = Vector3.new(targetPos.X, currentPos.Y, targetPos.Z)
    local horizontalDistance = (horizontalTarget - currentPos).Magnitude
    
    -- Check if we got teleported back (anti-cheat detection)
    if testV1LastPos and (currentPos - testV1LastPos).Magnitude > 20 then
        testV1ForceCounter = testV1ForceCounter + 1
        statusLabel.Text = "Status: ANTI-CHEAT DETECTED [" .. testV1ForceCounter .. "] | Fighting Back | Immortal Mode: ON"
        
        -- Force back to last position with multiple methods
        rootPart.CFrame = CFrame.new(testV1LastPos)
        rootPart.Anchored = true
        wait(0.05)
        rootPart.Anchored = false
    end
    
    if horizontalDistance > 2 then
        -- Calculate movement direction
        local direction = (horizontalTarget - currentPos).Unit
        local floatSpeed = 1.2 -- Slower for more stability
        local newPos = currentPos + (direction * floatSpeed)
        
        -- Maintain exact height
        newPos = Vector3.new(newPos.X, currentPos.Y, newPos.Z)
        
        -- Ultra-stable movement with multiple safety checks
        rootPart.CFrame = CFrame.new(newPos)
        rootPart.Velocity = Vector3.new(0, 0, 0)
        rootPart.RotVelocity = Vector3.new(0, 0, 0)
        
        -- Force physics state
        humanoid.PlatformStand = true
        humanoid.Sit = false
        
        -- Assembly velocity override (modern Roblox)
        pcall(function()
            rootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            rootPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
        end)
        
        -- Anti-fall protection
        if newPos.Y < currentPos.Y - 5 then
            newPos = Vector3.new(newPos.X, currentPos.Y, newPos.Z)
            rootPart.CFrame = CFrame.new(newPos)
        end
        
        -- Update last position for teleport-back detection
        testV1LastPos = newPos
        
        statusLabel.Text = "Status: TEST V1 FLYING | Dist: " .. math.floor(horizontalDistance) .. " | Immortal Mode: ON"
        
    else
        -- Arrived at base - safe landing
        local landPos = Vector3.new(targetPos.X, targetPos.Y + 1, targetPos.Z)
        rootPart.CFrame = CFrame.new(landPos)
        
        -- Gradual landing
        wait(0.2)
        humanoid.PlatformStand = false
        rootPart.Anchored = false
        
        -- Stop the test
        isTestV1Active = false
        statusLabel.Text = "Status: TEST V1 COMPLETE | Immortal Mode: ON"
        testV1Btn.Text = "TEST V1"
        testV1Btn.BackgroundColor3 = Color3.fromRGB(25, 25, 60)
        
        if testV1Connection then
            testV1Connection:Disconnect()
            testV1Connection = nil
        end
        
        testV1LastPos = nil
        testV1ForceCounter = 0
    end
end

-- Set Base Position Function
local function setBasePosition()
    local character = player.Character
    if not character then 
        statusLabel.Text = "Status: NO CHARACTER | Immortal Mode: ON"
        return 
    end
    
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then 
        statusLabel.Text = "Status: NO ROOT PART | Immortal Mode: ON"
        return 
    end
    
    basePosition = rootPart.Position
    statusLabel.Text = "Status: BASE SET | Immortal Mode: ON"
    
    -- Enhanced visual feedback
    local tween = TweenService:Create(setBaseBtn, TweenInfo.new(0.4), {
        BackgroundColor3 = Color3.fromRGB(25, 80, 25),
        BackgroundTransparency = 0.1
    })
    tween:Play()
    
    wait(1.2)
    
    local tween2 = TweenService:Create(setBaseBtn, TweenInfo.new(0.4), {
        BackgroundColor3 = Color3.fromRGB(45, 45, 45),
        BackgroundTransparency = 0.2
    })
    tween2:Play()
end

-- Test V1 Function
local function startTestV1()
    if not basePosition then
        statusLabel.Text = "Status: SET BASE FIRST | Immortal Mode: ON"
        return
    end
    
    if isTestV1Active then
        -- Stop test v1
        isTestV1Active = false
        statusLabel.Text = "Status: TEST V1 STOPPED | Immortal Mode: ON"
        testV1Btn.Text = "TEST V1"
        testV1Btn.BackgroundColor3 = Color3.fromRGB(25, 25, 60)
        
        if testV1Connection then
            testV1Connection:Disconnect()
            testV1Connection = nil
        end
        
        -- Advanced Test V1 reset
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            
            if humanoid then
                humanoid.PlatformStand = false
                humanoid.Sit = false
                humanoid.WalkSpeed = 16
            end
            
            if rootPart then
                rootPart.Anchored = false
                rootPart.CanCollide = true
            end
        end
        
        testV1LastPos = nil
        testV1ForceCounter = 0
        
        return
    end
    
    -- Start test v1
    isTestV1Active = true
    statusLabel.Text = "Status: TEST V1 FLYING | Immortal Mode: ON"
    testV1Btn.Text = "STOP TEST"
    testV1Btn.BackgroundColor3 = Color3.fromRGB(40, 40, 90)
    
    -- Set initial float height
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local currentPos = rootPart.Position
            local floatPos = Vector3.new(currentPos.X, currentPos.Y + floatHeight, currentPos.Z)
            rootPart.CFrame = CFrame.new(floatPos)
        end
    end
    
    -- Start ultra-stable horizontal float movement
    testV1LastPos = nil
    testV1ForceCounter = 0
    testV1Connection = RunService.Heartbeat:Connect(ultraStableFloatSystem)
end

-- Button connections
setBaseBtn.MouseButton1Click:Connect(setBasePosition)
testV1Btn.MouseButton1Click:Connect(startTestV1)

-- Initialize Advanced God Mode with respawn protection
player.CharacterAdded:Connect(function(character)
    wait(1)
    enableAdvancedGodMode()
    
    -- Additional respawn protection
    spawn(function()
        while character.Parent do
            wait(0.5)
            if character:FindFirstChild("Humanoid") then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid.Health <= 0 then
                    humanoid.Health = math.huge
                    humanoid.MaxHealth = math.huge
                end
            end
        end
    end)
end)

if player.Character then
    enableAdvancedGodMode()
end

-- Cleanup
Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == player then
        if testV1Connection then testV1Connection:Disconnect() end
        if godModeConnection then godModeConnection:Disconnect() end
    end
end)

-- Enhanced glow animation
spawn(function()
    while wait(0.05) do
        if glowFrame and glowFrame.Parent then
            local tween = TweenService:Create(glowFrame, 
                TweenInfo.new(3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), 
                {BackgroundTransparency = 0.95}
            )
            tween:Play()
        else
            break
        end
    end
end)

print("loaded successfully!")
